{"version":3,"file":"wind-gl-core.cjs.js","sources":["../src/utils/common.ts","../src/utils/gl-utils.ts","../src/Base.ts","../src/Fill.ts","../src/utils/style-parser.ts","../src/WindFill.ts","../src/ScalarFill.ts","../src/utils/raf.ts","../src/WindParticles.ts"],"sourcesContent":["export function calcMinMax(array: number[]): [number, number] {\n  let min = Infinity;\n  let max = Infinity;\n  // @from: https://stackoverflow.com/questions/13544476/how-to-find-max-and-min-in-array-using-minimum-comparisons\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i];\n\n    if (min === Infinity) {\n      min = val;\n    } else if (max === Infinity) {\n      max = val;\n      // update min max\n      // 1. Pick 2 elements(a, b), compare them. (say a > b)\n      min = Math.min(min, max);\n      max = Math.max(min, max);\n    } else {\n      // 2. Update min by comparing (min, b)\n      // 3. Update max by comparing (max, a)\n      min = Math.min(val, min);\n      max = Math.max(val, max);\n    }\n  }\n  return [min, max];\n}\n\nexport function isNumber(val: any): boolean {\n  return typeof val === 'number' && !isNaN(val);\n}\n\nexport function isValide(val: any): boolean {\n  return val !== undefined && val !== null && !isNaN(val);\n}\n\nexport function findStopLessThanOrEqualTo(stops: number[], input: number) {\n  const lastIndex = stops.length - 1;\n  let lowerIndex = 0;\n  let upperIndex = lastIndex;\n  let currentIndex = 0;\n  let currentValue;\n  let nextValue;\n\n  while (lowerIndex <= upperIndex) {\n    currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n    currentValue = stops[currentIndex];\n    nextValue = stops[currentIndex + 1];\n\n    if (currentValue <= input) {\n      if (currentIndex === lastIndex || input < nextValue) {\n        // Search complete\n        return currentIndex;\n      }\n\n      lowerIndex = currentIndex + 1;\n    } else if (currentValue > input) {\n      upperIndex = currentIndex - 1;\n    } else {\n      throw new Error('Input is not a number.');\n    }\n  }\n\n  return 0;\n}\n\nexport function fp64LowPart(x: number) {\n  return x - Math.fround(x);\n}\n\nexport function mat4Invert(out: number[], a: number[]) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  let det =\n    b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\nexport function transformMat4(out: number[], a: number[], m: number[]) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w; // 0\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w; // 0\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w; // 0\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w; // 1\n  return out;\n}\n\nexport function getEye(matrix: number[]) {\n  const defaultMat4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]; // insted of mat4.create()\n  let eye = transformMat4(\n    [],\n    [0, 0, 0, 1],\n    mat4Invert(defaultMat4, matrix) as number[],\n  );\n  const clipW = 1.0 / eye[3];\n  eye = eye.map((item: number) => item / eye[3]);\n  eye[3] = clipW;\n  return eye;\n}\n","import { fp64LowPart } from './common';\n// 大量代码来自于 [webgl-utils](https://github.com/gfxfundamentals/webgl-fundamentals/blob/master/webgl/resources/webgl-utils.js)\n\nexport function getDevicePixelRatio() {\n  return devicePixelRatio || 1;\n}\n\n/**\n * resize gl context\n * @link https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n * @link https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-anti-patterns.html\n * @param canvas\n * @param pixelRatio\n * @returns {boolean}\n */\nexport function resizeCanvasSize(\n  canvas: HTMLCanvasElement,\n  pixelRatio?: number,\n) {\n  if (!canvas) {\n    return false;\n  }\n  pixelRatio = pixelRatio || getDevicePixelRatio();\n  if (canvas instanceof HTMLCanvasElement) {\n    const width = canvas.clientWidth * pixelRatio;\n    const height = canvas.clientHeight * pixelRatio;\n    if (width <= 0 || height <= 0) {\n      return false;\n    } else if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width;\n      canvas.height = height;\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * get gl context\n * @param canvas\n * @param glOptions\n * @returns {null}\n */\nexport function getGlContext(canvas: HTMLCanvasElement, glOptions = {}) {\n  const names = ['webgl', 'experimental-webgl'];\n  let context: WebGLRenderingContext | null = null;\n\n  function onContextCreationError(error: any) {\n    console.error(error.statusMessage);\n  }\n\n  canvas.addEventListener(\n    'webglcontextcreationerror',\n    onContextCreationError,\n    false,\n  );\n  for (let ii = 0; ii < names.length; ++ii) {\n    try {\n      context = canvas.getContext(\n        names[ii],\n        glOptions,\n      ) as WebGLRenderingContext;\n    } catch (e) {} // eslint-disable-line\n    if (context) {\n      break;\n    }\n  }\n\n  canvas.removeEventListener(\n    'webglcontextcreationerror',\n    onContextCreationError,\n    false,\n  );\n\n  if (!context || !context.getExtension('OES_texture_float')) {\n    return null;\n  }\n  return context;\n}\n\n/**\n * defines\n * @param shader\n * @param defines\n */\nexport function defineShader(shader: string, defines: any) {\n  return Object.keys(defines).reduce((str, key) => {\n    return defines[key] ? str + `#define ${key} ${defines[key]}\\n` : '';\n  }, '');\n}\n\n/**\n * inject shader module\n * @param shader\n * @param modules\n */\nexport function injectShaderModule(shader: string, modules: any = {}) {\n  Object.keys(modules).map((key) => {\n    if (modules[key]) {\n      shader = shader.replace(new RegExp(key, 'g'), `${modules[key]} \\n`);\n    }\n  });\n  return shader;\n}\n\n/**\n * create shader and compile shader\n * @param gl\n * @param type\n * @param source\n * @returns {WebGLShader}\n */\nexport function createShader(\n  gl: WebGLRenderingContext,\n  type: GLenum,\n  source: string,\n): WebGLShader {\n  const shader = gl.createShader(type) as WebGLShader;\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader) || '';\n    gl.deleteShader(shader);\n    throw new Error(log);\n  }\n  return shader;\n}\n\n/**\n * create program from vertex and frag\n * @param gl\n * @param vertexShaderSource\n * @param fragmentShaderSource\n * @returns {WebGLProgram}\n */\nexport function createProgram(\n  gl: WebGLRenderingContext,\n  vertexShaderSource: string,\n  fragmentShaderSource: string,\n): WebGLProgram | null {\n  // create the shader program\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n\n  const fragmentShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource,\n  );\n\n  const program = gl.createProgram();\n  if (program !== null) {\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program) || '');\n    }\n  }\n\n  return program;\n}\n\n/**\n * create 2d texture\n * @param gl\n * @param filter\n * @param data\n * @param width\n * @param height\n * @returns {WebGLTexture}\n */\nexport function createTexture(\n  gl: WebGLRenderingContext,\n  filter: GLint,\n  data: TexImageSource | Uint8Array,\n  width: number,\n  height: number,\n): WebGLTexture | null {\n  // 创建纹理对象\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  // 指定水平方向填充算法\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  // 指定垂直方向填充算法\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  // 指定缩小算法\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  // 指定放大算法\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      data,\n    );\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nexport function resizeTexture(\n  gl: WebGLRenderingContext,\n  texture: WebGLTexture,\n  width: number,\n  height: number,\n  data: TexImageSource | Uint8Array,\n) {\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      data,\n    );\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n}\n\n/**\n * bind texture\n * @param gl\n * @param texture\n * @param unit\n */\nexport function bindTexture(\n  gl: WebGLRenderingContext,\n  texture: WebGLTexture,\n  unit: number,\n) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\n/**\n * delete texture\n * @param gl\n * @param texture\n */\nexport function destroyTexture(\n  gl: WebGLRenderingContext,\n  texture: WebGLTexture,\n) {\n  gl.deleteTexture(texture);\n}\n\n/**\n * create data buffer\n * @param gl\n * @param data\n * @returns {AudioBuffer | WebGLBuffer}\n */\nexport function createBuffer(gl: WebGLRenderingContext, data: any) {\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n  if (data) {\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  }\n\n  return buffer;\n}\n\nexport function updateBufferData(\n  gl: WebGLRenderingContext,\n  buffer: WebGLBuffer,\n  data: any,\n) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  if (data) {\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  }\n  return buffer;\n}\n\n/**\n * bind attribute\n * @param gl\n * @param buffer\n * @param attribute\n * @param numComponents\n */\nexport function bindAttribute(\n  gl: WebGLRenderingContext,\n  buffer: WebGLBuffer,\n  attribute: GLuint,\n  numComponents: GLint,\n) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\n/**\n * bind framebuffer\n * @param gl\n * @param framebuffer\n * @param texture\n */\nexport function bindFramebuffer(\n  gl: WebGLRenderingContext,\n  framebuffer: WebGLFramebuffer | null,\n  texture?: WebGLTexture,\n) {\n  // 创建一个帧缓冲\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    // 绑定纹理到帧缓冲\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0,\n    );\n  }\n}\n\nexport function resizeFramebuffer(\n  gl: WebGLRenderingContext,\n  framebuffer: WebGLFramebuffer | null,\n  width: number,\n  height: number,\n  texture?: WebGLTexture,\n) {\n  // 创建一个帧缓冲\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    // 绑定纹理到帧缓冲\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0,\n    );\n  }\n}\n\n/**\n * clear scene\n * @param gl\n * @param color\n */\nexport function clearScene(\n  gl: WebGLRenderingContext,\n  color: number[],\n  depth = 1,\n  stencil = 0,\n  fbo?: WebGLFramebuffer,\n) {\n  const [r, g, b, a] = color;\n  let clearFlags = 0;\n  gl.clearColor(r, g, b, a);\n\n  // tslint:disable-next-line:no-bitwise\n  clearFlags |= gl.COLOR_BUFFER_BIT;\n\n  if (depth !== undefined) {\n    gl.clearDepth(depth);\n    // tslint:disable-next-line:no-bitwise\n    clearFlags |= gl.DEPTH_BUFFER_BIT;\n  }\n  if (stencil !== undefined) {\n    // tslint:disable-next-line:no-bitwise\n    gl.clearStencil(stencil | 0);\n    // tslint:disable-next-line:no-bitwise\n    clearFlags |= gl.STENCIL_BUFFER_BIT;\n  }\n  // tslint:disable-next-line:no-bitwise\n  gl.clear(clearFlags);\n}\n\n/**\n * load image by url\n * @param src\n * @returns {Promise<Image>}\n */\nexport function loadImage(src: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(new Event('url is null'));\n    }\n    const image = new Image();\n\n    image.crossOrigin = 'anonymous';\n\n    image.onload = () => resolve(image);\n    image.onerror = reject;\n\n    image.src = src;\n\n    if (image.complete) {\n      resolve(image);\n    }\n  });\n}\n\nexport interface IPlaneBuffer {\n  uvs: {\n    data: number[];\n    size: number;\n  };\n  elements: {\n    data: number[];\n    count: number;\n  };\n  wireframeElements: {\n    data: number[];\n    count: number;\n  };\n  position: {\n    data: number[];\n    size: number;\n  };\n  positionLow: {\n    data: number[];\n    size: number;\n  };\n}\n\nexport function getPlaneBuffer(\n  startX: number,\n  endX: number,\n  startY: number,\n  endY: number,\n  widthSegments: number,\n  heightSegments: number,\n): IPlaneBuffer {\n  const width = endX - startX;\n  const height = endY - startY;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n\n  const gridX = Math.floor(widthSegments);\n  const gridY = Math.floor(heightSegments);\n\n  const gridX1 = gridX + 1;\n  const gridY1 = gridY + 1;\n\n  const segmentWidth = width / gridX;\n  const segmentHeight = height / gridY;\n\n  const indices: number[] = [];\n  const wireframeIndexes: number[] = [];\n  const vertices: number[] = [];\n  const verticesLow: number[] = [];\n  const uvs: number[] = [];\n\n  for (let iy = 0; iy < gridY1; iy++) {\n    const y = iy * segmentHeight;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const x = ix * segmentWidth;\n      const vx = startX + (x / widthHalf / 2) * width;\n      const vy = startY + (y / heightHalf / 2) * height;\n      vertices.push(vx, vy, 0);\n      verticesLow.push(fp64LowPart(vx), fp64LowPart(vy), 0);\n      // vertices.push(ix / gridX, 1 - (iy / gridY));\n      uvs.push(ix / gridX, iy / gridY);\n    }\n  }\n\n  for (let iy = 0; iy < gridY; iy++) {\n    for (let ix = 0; ix < gridX; ix++) {\n      const a = ix + gridX1 * iy;\n      const b = ix + gridX1 * (iy + 1);\n      const c = ix + 1 + gridX1 * (iy + 1);\n      const d = ix + 1 + gridX1 * iy;\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n\n  for (let i = 0, l = indices.length; i < l; i += 3) {\n    const a = indices[i];\n    const b = indices[i + 1];\n    const c = indices[i + 2];\n    wireframeIndexes.push(a, b, b, c, c, a);\n  }\n\n  return {\n    uvs: {\n      data: uvs,\n      size: 2,\n    },\n    elements: {\n      data: indices,\n      count: indices.length,\n    },\n    wireframeElements: {\n      data: wireframeIndexes,\n      count: wireframeIndexes.length,\n    },\n    position: {\n      data: vertices,\n      size: 3,\n    },\n    positionLow: {\n      data: verticesLow,\n      size: 3,\n    },\n  };\n}\n","import {\n  clearScene,\n  createProgram,\n  injectShaderModule,\n  resizeCanvasSize,\n} from './utils/gl-utils';\n\nexport interface IBufferComponents {\n  buffer: WebGLBuffer;\n  numComponents?: number;\n  size?: number;\n  type?: GLenum;\n  normalize?: boolean;\n  stride?: number;\n  offset?: number;\n}\n\nexport interface IUniformSetters {\n  [key: string]: (arg: any) => void;\n}\n\nexport interface IUniformValues {\n  [key: string]: any;\n}\n\nexport interface IAttribSetters {\n  [key: string]: (arg: any) => void;\n}\n\nexport interface IAttribValues {\n  [key: string]: any;\n}\n\nexport type ElementsDataType = Uint8Array | Uint16Array;\n\nexport type ElementsData = Uint8Array | Uint16Array | Uint32Array;\n\nexport interface IElementsOptions {\n  data?: ElementsData | null;\n  usage?: GLenum;\n  primitive?: GLenum;\n  count?: number;\n}\n\nexport default class Base {\n  public vertShader = '';\n\n  public fragShader = '';\n  public readonly gl: WebGLRenderingContext;\n  public count: number;\n  public readonly program: WebGLProgram | null;\n  public textureUnit: number;\n  public uniformSetters: IUniformSetters;\n  public attribSetters: IAttribSetters;\n  public transfromStack: Array<() => void>;\n  public elementsBuffer: WebGLBuffer | null;\n  public primitive: GLenum;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vShader: string,\n    fShader: string,\n    modules?: {\n      [key: string]: string;\n    },\n  ) {\n    if (vShader) {\n      this.vertShader = vShader;\n    }\n    if (fShader) {\n      this.fragShader = fShader;\n    }\n\n    this.program = createProgram(\n      gl,\n      injectShaderModule(this.vertShader, modules),\n      this.fragShader,\n    );\n\n    this.gl = gl;\n\n    this.textureUnit = 0;\n\n    this.uniformSetters = this.createUniformSetters();\n    this.attribSetters = this.createAttributeSetters();\n\n    this.transfromStack = []; // 矩阵变换调用栈\n  }\n\n  public active() {\n    this.gl.useProgram(this.program);\n    return this;\n  }\n\n  public deactive() {\n    this.gl.deleteProgram(this.program);\n    return this;\n  }\n\n  /**\n   * from webgl-utils\n   * @param gl\n   * @param type\n   * @returns {GLenum|undefined}\n   */\n  public getBindPointForSamplerType(gl: WebGLRenderingContext, type: GLenum) {\n    if (type === gl.SAMPLER_2D) {\n      return gl.TEXTURE_2D;\n    } // eslint-disable-line\n    if (type === gl.SAMPLER_CUBE) {\n      return gl.TEXTURE_CUBE_MAP;\n    } // eslint-disable-line\n    return undefined;\n  }\n\n  /**\n   * from webgl-utils\n   * @param program\n   * @param uniformInfo\n   * @returns {function(...[*]=)}\n   */\n  public createUniformSetter(\n    program: WebGLProgram,\n    uniformInfo: WebGLActiveInfo,\n  ) {\n    const { gl } = this;\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    const type = uniformInfo.type;\n    // Check if this uniform is an array\n    const isArray =\n      uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]';\n    if (type === gl.FLOAT && isArray) {\n      return function(v: Float32List) {\n        gl.uniform1fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT) {\n      return function(v: GLfloat) {\n        gl.uniform1f(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC2) {\n      return function(v: Float32List) {\n        gl.uniform2fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC3) {\n      return function(v: Float32List) {\n        gl.uniform3fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC4) {\n      return function(v: Float32List) {\n        gl.uniform4fv(location, v);\n      };\n    }\n    if (type === gl.INT && isArray) {\n      return function(v: Int32List) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.INT) {\n      return function(v: GLint) {\n        gl.uniform1i(location, v);\n      };\n    }\n    if (type === gl.INT_VEC2) {\n      return function(v: Int32List) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC3) {\n      return function(v: Int32List) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC4) {\n      return function(v: Int32List) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.BOOL) {\n      return function(v: Int32List) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC2) {\n      return function(v: Int32List) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC3) {\n      return function(v: Int32List) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC4) {\n      return function(v: Int32List) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT2) {\n      return function(v: Float32List) {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT3) {\n      return function(v: Float32List) {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT4) {\n      return function(v: Float32List) {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    if ((type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) && isArray) {\n      const units: number[] = [];\n      for (let ii = 0; ii < uniformInfo.size; ++ii) {\n        units.push(this.textureUnit++);\n      }\n      return (function(bindPoint: GLenum | undefined, units) {\n        return function(textures: WebGLTexture[]) {\n          gl.uniform1iv(location, units);\n          textures.forEach(function(texture, index) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            if (bindPoint !== undefined) {\n              gl.bindTexture(bindPoint, texture);\n            }\n          });\n        };\n      })(this.getBindPointForSamplerType(gl, type), units);\n    }\n    if (type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) {\n      return (function(bindPoint: GLenum | undefined, unit) {\n        return function(texture: WebGLTexture) {\n          gl.uniform1i(location, unit);\n          gl.activeTexture(gl.TEXTURE0 + unit);\n          if (bindPoint !== undefined) {\n            gl.bindTexture(bindPoint, texture);\n          }\n        };\n      })(this.getBindPointForSamplerType(gl, type), this.textureUnit++);\n    }\n    throw new Error('unknown type: 0x' + type.toString(16)); // we should never get here.\n  }\n\n  /**\n   * from webgl-utils\n   * @returns {{}}\n   */\n  public createUniformSetters() {\n    const { gl } = this;\n    this.textureUnit = 0;\n    const uniformSetters: IUniformSetters = {};\n\n    if (this.program !== null) {\n      const numUniforms = gl.getProgramParameter(\n        this.program,\n        gl.ACTIVE_UNIFORMS,\n      );\n\n      for (let ii = 0; ii < numUniforms; ++ii) {\n        const uniformInfo: WebGLActiveInfo | null = gl.getActiveUniform(\n          this.program,\n          ii,\n        );\n        if (!uniformInfo) {\n          break;\n        }\n        let name = uniformInfo.name;\n        // remove the array suffix.\n        if (name.substr(-3) === '[0]') {\n          name = name.substr(0, name.length - 3);\n        }\n        const setter = this.createUniformSetter(this.program, uniformInfo);\n        uniformSetters[name] = setter;\n      }\n    }\n\n    return uniformSetters;\n  }\n\n  /**\n   * from webgl-utils\n   * @returns {function(...[*]=)}\n   */\n  public createAttribSetter(index: number) {\n    const { gl } = this;\n    return function(b: IBufferComponents) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      if (b.numComponents !== undefined || b.size !== undefined) {\n        gl.vertexAttribPointer(\n          index,\n          (b.numComponents || b.size) as number,\n          b.type || gl.FLOAT,\n          b.normalize || false,\n          b.stride || 0,\n          b.offset || 0,\n        );\n      }\n    };\n  }\n\n  public createAttributeSetters() {\n    const { gl } = this;\n    const attribSetters: IAttribSetters = {};\n\n    if (this.program !== null) {\n      const numAttribs = gl.getProgramParameter(\n        this.program,\n        gl.ACTIVE_ATTRIBUTES,\n      );\n      for (let ii = 0; ii < numAttribs; ++ii) {\n        const attribInfo: WebGLActiveInfo | null = gl.getActiveAttrib(\n          this.program,\n          ii,\n        );\n        if (!attribInfo) {\n          break;\n        }\n        const index = gl.getAttribLocation(this.program, attribInfo.name);\n        attribSetters[attribInfo.name] = this.createAttribSetter(index);\n      }\n    }\n\n    return attribSetters;\n  }\n\n  public setAttributes(attribs: IAttribValues, setters?: IAttribSetters | any) {\n    if (setters) {\n      setters = setters.attribSetters || setters;\n    } else {\n      setters = this.attribSetters;\n    }\n    Object.keys(attribs).forEach(function(name) {\n      const setter = setters[name];\n      if (setter) {\n        setter(attribs[name]);\n      }\n    });\n    return this;\n  }\n\n  public setUniforms(values: IUniformValues, setters?: IUniformSetters | any) {\n    if (setters) {\n      setters = setters.uniformSetters || setters;\n    } else {\n      setters = this.uniformSetters;\n    }\n    Object.keys(values).forEach(function(name) {\n      const setter = setters[name];\n      if (setter) {\n        setter(values[name]);\n      }\n    });\n\n    return this;\n  }\n\n  public elements(element: IElementsOptions) {\n    if (!this.elementsBuffer) {\n      this.elementsBuffer = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.elementsBuffer);\n    if (element.data) {\n      this.gl.bufferData(\n        this.gl.ELEMENT_ARRAY_BUFFER,\n        element.data,\n        element.usage || this.gl.STATIC_DRAW,\n      );\n    }\n    if (element.count !== undefined) {\n      this.runTimes(element.count);\n    }\n\n    if (element.primitive) {\n      this.setPrimitive(element.primitive);\n    }\n\n    return this;\n  }\n\n  /**\n   * 可以override，默认使用此种方式清空画布\n   * @param color\n   * @returns {Base}\n   */\n  public clear(color: number[]) {\n    clearScene(this.gl, color);\n    this.transfromStack = [];\n    return this;\n  }\n\n  /**\n   * 运行次数\n   * TODO: 目前没有好的方式去绑定顶点数量的关系\n   * @param count\n   */\n  public runTimes(count: number) {\n    this.count = count || 0;\n    return this;\n  }\n\n  public setPrimitive(primitive?: GLenum) {\n    this.primitive = primitive || this.gl.TRIANGLES;\n    return this;\n  }\n\n  public resize(width?: number, height?: number) {\n    if (width === undefined || height === undefined) {\n      resizeCanvasSize(this.gl.canvas);\n      this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    } else {\n      this.gl.viewport(0, 0, width, height);\n    }\n    return this;\n  }\n\n  public draw() {\n    throw new Error('should override');\n  }\n\n  public translate() {\n    throw new Error('should override');\n  }\n\n  public rotate() {\n    throw new Error('should override');\n  }\n\n  public scale() {\n    throw new Error('should override');\n  }\n\n  public destroyed() {\n    throw new Error('should override');\n  }\n}\n","import Base from './Base';\nimport FillFrag from './shaders/currency-fill.frag.glsl';\nimport FillVert from './shaders/currency-fill.vert.glsl';\n\nexport class Fill extends Base {\n  public vertShader = FillVert;\n\n  public fragShader = FillFrag;\n  private checkExt: OES_element_index_uint | null;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vShader?: string,\n    fShader?: string,\n    modules?: {\n      [key: string]: string;\n    },\n  ) {\n    super(gl, vShader || FillVert, fShader || FillFrag, modules || {});\n  }\n\n  public draw() {\n    // draw\n    if (this.checkExt !== undefined) {\n      const primitiveType = this.primitive || this.gl.TRIANGLES;\n      // gl.UNSIGNED_BYTE对应Uint8Array，gl.UNSIGNED_SHORT对应Uint16Array\n      if (this.checkExt) {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_INT,\n          0,\n        );\n      } else {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_SHORT,\n          0,\n        );\n      }\n    } else {\n      this.checkExt = this.gl.getExtension('OES_element_index_uint');\n    }\n\n    return this;\n  }\n\n  public translate() {\n    return this;\n  }\n\n  public rotate() {\n    return this;\n  }\n\n  public scale() {\n    return this;\n  }\n}\n","/**\n * ```js\n * [\n *   'interpolate',\n *   ['linear'],\n *   ['get', 'value'],\n *   0.0,\n *   '#3288bd',\n *   10,\n *   '#66c2a5',\n *   20,\n *   '#abdda4',\n * ]\n * ```\n */\nimport { findStopLessThanOrEqualTo, isNumber } from './common';\n\nexport function parseColorStyle(styleAttrField: any[]) {\n  if (Array.isArray(styleAttrField) && styleAttrField.length > 3) {\n    const type = styleAttrField[0]; // interpolate \\ step\n    const action = styleAttrField[1]; // linear\n    // const expression = styleAttrField[2];\n    const interpolateColor: any[] = [];\n    for (let i = 3; i < styleAttrField.length; i += 2) {\n      const val = styleAttrField[i];\n      const color = styleAttrField[i + 1];\n      interpolateColor.push({\n        key: val,\n        value: color,\n      });\n    }\n    return {\n      operator: type,\n      interpolation: {\n        name: action[0],\n        base: action[1],\n      },\n      input: interpolateColor,\n    };\n  } else {\n    console.warn('[wind-core]: style-parser style config invalid');\n    return {};\n  }\n}\n\nexport function parseZoomStyle(styleAttrField: any[]) {\n  if (Array.isArray(styleAttrField) && styleAttrField.length > 3) {\n    const type = styleAttrField[0]; // interpolate\n    const action = styleAttrField[1]; // linear\n    // const expression = styleAttrField[2];\n    const interpolateZoom: {\n      key: string | number;\n      value: string;\n    }[] = [];\n    for (let i = 3; i < styleAttrField.length; i += 2) {\n      const val = styleAttrField[i];\n      const color = styleAttrField[i + 1];\n      interpolateZoom.push({\n        key: val,\n        value: color,\n      });\n    }\n    return {\n      operator: type,\n      interpolation: {\n        name: action[0],\n        base: action[1],\n      },\n      input: interpolateZoom,\n    };\n  } else {\n    console.warn('[wind-core]: style-parser style config invalid');\n    return {};\n  }\n}\n\nexport function createLinearGradient(\n  range: any[],\n  styleAttrField: any[],\n): {\n  data: Uint8Array;\n  colorRange: [number, number];\n} {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = 256;\n  canvas.height = 1;\n\n  const { input: interpolateColor } = parseColorStyle(styleAttrField);\n\n  if (ctx && interpolateColor && Array.isArray(interpolateColor)) {\n    const keys = interpolateColor.map((d) => parseFloat(d.key));\n    const colorRange: [number, number] = [Math.min(...keys), Math.max(...keys)];\n    const [min, max] = [range[0] || colorRange[0], range[1] || colorRange[1]];\n    const gradient = ctx.createLinearGradient(0, 0, 256, 0);\n\n    for (let i = 0; i < interpolateColor.length; i += 1) {\n      const key = interpolateColor[i].key;\n      const color = interpolateColor[i].value;\n      gradient.addColorStop((key - min) / (max - min), color);\n    }\n\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 256, 1);\n    return {\n      data: new Uint8Array(ctx.getImageData(0, 0, 256, 1).data),\n      colorRange,\n    };\n  } else {\n    // @ts-ignore\n    return {};\n  }\n}\n\nfunction exponentialInterpolation(\n  input: number,\n  base: number,\n  lowerValue: number,\n  upperValue: number,\n) {\n  const difference = upperValue - lowerValue;\n  const progress = input - lowerValue;\n\n  if (difference === 0) {\n    return 0;\n  } else if (base === 1) {\n    return progress / difference;\n  } else {\n    return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n  }\n}\n\nexport type InterpolationType =\n  | { name: 'linear' }\n  | { name: 'exponential'; base: number }\n  | { name: 'cubic-bezier'; controlPoints: [number, number, number, number] };\n\nexport function interpolationFactor(\n  interpolation: InterpolationType,\n  input: number,\n  lower: number,\n  upper: number,\n) {\n  let t = 0;\n  if (interpolation.name === 'exponential') {\n    t = exponentialInterpolation(input, interpolation.base, lower, upper);\n  } else if (interpolation.name === 'linear') {\n    t = exponentialInterpolation(input, 1, lower, upper);\n  } else if (interpolation.name === 'cubic-bezier') {\n    console.warn('interpolationFactor');\n  }\n  return t;\n}\n\nexport function interpolateNumber(a: number, b: number, t: number) {\n  return a * (1 - t) + b * t;\n}\n\nexport type CachedStyleItem =\n  | {\n      operator: any;\n      interpolation: any;\n      input: Array<{ key: any; value: any }>;\n    }\n  | { operator?: undefined; interpolation?: undefined; input?: undefined };\n\nconst cachedStyle: {\n  [key: string]: CachedStyleItem;\n} = {};\n\nexport function createZoom(\n  uid: string,\n  zoom: number,\n  key: string,\n  styles: any,\n  clearCache?: boolean,\n): number {\n  const ukey = `${uid}_${key}`;\n  const styleAttrField = styles[key] as any[] | number;\n\n  if (isNumber(styleAttrField)) {\n    if (cachedStyle[ukey]) {\n      delete cachedStyle[ukey];\n    }\n    return styleAttrField as number;\n  }\n\n  if (\n    styleAttrField &&\n    Array.isArray(styleAttrField) &&\n    (!cachedStyle[ukey] || clearCache)\n  ) {\n    cachedStyle[ukey] = parseZoomStyle(styleAttrField);\n  }\n\n  if (cachedStyle[ukey]) {\n    const { input: interpolateZoom, interpolation } = cachedStyle[ukey] || {};\n    if (interpolateZoom && Array.isArray(interpolateZoom)) {\n      const labels = interpolateZoom.map((i) => i.key);\n      const outputs = interpolateZoom.map((i) => i.value);\n\n      if (zoom <= labels[0]) {\n        return outputs[0];\n      }\n      const stopCount = labels.length;\n      if (zoom >= labels[stopCount - 1]) {\n        return outputs[stopCount - 1];\n      }\n\n      const index = findStopLessThanOrEqualTo(labels, zoom);\n      const idx = labels.length - 1;\n\n      const lower = labels[index];\n      const upper = labels[index >= idx ? idx : index + 1];\n\n      const t = interpolationFactor(interpolation, zoom, lower, upper);\n\n      const outputLower = outputs[index];\n      const outputUpper = outputs[index >= idx ? idx : index + 1];\n\n      return interpolateNumber(outputLower, outputUpper, t);\n    } else {\n      return 1;\n    }\n  }\n  return 1;\n}\n","import Base from './Base';\nimport FillFrag from './shaders/wind-fill.frag.glsl';\nimport FillVert from './shaders/wind-fill.vert.glsl';\n\nexport class WindFill extends Base {\n  public vertShader = FillVert;\n\n  public fragShader = FillFrag;\n  private checkExt: OES_element_index_uint | null;\n\n  constructor(\n    gl: WebGLRenderingContext,\n    vShader?: string,\n    fShader?: string,\n    modules?: {\n      [key: string]: string;\n    },\n  ) {\n    super(gl, vShader || FillVert, fShader || FillFrag, modules || {});\n  }\n\n  public draw() {\n    // draw\n    if (this.checkExt !== undefined) {\n      const primitiveType = this.primitive || this.gl.TRIANGLES;\n      // gl.UNSIGNED_BYTE对应Uint8Array，gl.UNSIGNED_SHORT对应Uint16Array\n      if (this.checkExt) {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_INT,\n          0,\n        );\n      } else {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_SHORT,\n          0,\n        );\n      }\n    } else {\n      this.checkExt = this.gl.getExtension('OES_element_index_uint');\n    }\n\n    return this;\n  }\n\n  public translate() {\n    return this;\n  }\n\n  public rotate() {\n    return this;\n  }\n\n  public scale() {\n    return this;\n  }\n\n  public destroyed() {}\n}\n","// @ts-ignore\nimport DataProcess from 'web-worker:./workers/DataProcesse';\nimport { Fill } from './Fill';\nimport { isNumber } from './utils/common';\nimport {\n  createBuffer,\n  createTexture,\n  getPlaneBuffer,\n  IPlaneBuffer,\n  loadImage,\n} from './utils/gl-utils';\nimport { createLinearGradient, createZoom } from './utils/style-parser';\nimport { WindFill } from './WindFill';\n\nexport interface IGFSItem {\n  header: {\n    parameterCategory: number | string;\n    parameterNumber: number | string;\n    dx: number;\n    dy: number;\n    nx: number;\n    ny: number;\n    lo1: number;\n    lo2: number;\n    la1: number;\n    la2: number;\n    [key: string]: any;\n  };\n  data: number[];\n}\n\nexport interface IOptions {\n  renderForm?: 'rg' | 'r';\n  styleSpec?: {\n    'fill-color': any[];\n    opacity: number | any[];\n  };\n  getZoom?: () => number;\n  opacity?: number;\n  triggerRepaint?: () => void;\n  createPlaneBuffer?: (\n    points: number[][],\n    widthSegments: number,\n    heightSegments: number,\n  ) => IPlaneBuffer;\n  injectShaderModules: {\n    [key: string]: string;\n  };\n  displayRange?: [number, number];\n  mappingRange?: [number, number];\n  widthSegments?: number;\n  heightSegments?: number;\n  wireframe?: boolean;\n}\n\nexport interface IData {\n  width: number;\n  height: number;\n  uMin?: number;\n  uMax?: number;\n  vMin?: number;\n  vMax?: number;\n  min?: number;\n  max?: number;\n  texCoordBuffer: WebGLBuffer | null;\n  quadBuffer: WebGLBuffer | null;\n  quad64LowBuffer: WebGLBuffer | null;\n  texture?: WebGLTexture | null;\n  indexes?: number[] | number[][];\n  wireframeIndexes?: number[] | number[][];\n}\n\nexport interface IJsonArrayData {\n  type: 'jsonArray';\n  data: IGFSItem[];\n  extent?: Array<[number, number]>;\n}\n\nexport interface IImageData {\n  type: 'image';\n  url: string;\n  extent: Array<[number, number]>;\n  uMin?: number;\n  uMax?: number;\n  vMin?: number;\n  vMax?: number;\n  min?: number;\n  max?: number;\n}\n\nexport const defaultOptions: IOptions = {\n  renderForm: 'r',\n  styleSpec: {\n    'fill-color': [\n      'interpolate',\n      ['linear'],\n      ['get', 'value'],\n      0.0,\n      '#3288bd',\n      10,\n      '#66c2a5',\n      20,\n      '#abdda4',\n      30,\n      '#e6f598',\n      40,\n      '#fee08b',\n      50,\n      '#fdae61',\n      60,\n      '#f46d43',\n      100.0,\n      '#d53e4f',\n    ],\n    opacity: 1,\n  },\n  displayRange: [Infinity, Infinity],\n  mappingRange: [0, 0],\n  widthSegments: 1,\n  heightSegments: 1,\n  wireframe: false,\n  createPlaneBuffer: (\n    points: number[][],\n    widthSegments: number,\n    heightSegments: number,\n  ) => {\n    const [startX, endX, startY, endY] = [\n      points[0][0],\n      points[2][0],\n      points[0][1],\n      points[1][1],\n    ];\n\n    return getPlaneBuffer(\n      startX,\n      endX,\n      startY,\n      endY,\n      widthSegments,\n      heightSegments,\n    );\n  },\n  injectShaderModules: {\n    '#modules-transformZ': `\nfloat transformZ(float value, vec3 pos) {\n  return 0.0;\n}\n    `,\n    '#modules-project': `\ngl_Position = u_matrix * vec4(pos.xy + vec2(u_offset, 0.0), pos.z + z, 1.0);\n    `,\n  },\n};\n\nexport function checkUVData(data: IData) {\n  return (\n    isNumber(data.uMin) &&\n    isNumber(data.uMax) &&\n    isNumber(data.vMin) &&\n    isNumber(data.vMax)\n  );\n}\n\nexport function checkData(data: IData) {\n  return isNumber(data.min) && isNumber(data.max);\n}\n\ninterface IScalarFill<T> {\n  [key: string]: T;\n}\n\nlet uid = 0;\n\nexport default class ScalarFill implements IScalarFill<any> {\n  [index: string]: any;\n\n  public readonly gl: WebGLRenderingContext;\n  public data: IData;\n  public colorRampTexture: WebGLTexture | null;\n\n  private uid: string;\n  private options: IOptions;\n\n  private opacity: number;\n\n  private colorRange: [number, number];\n\n  private worker: Worker;\n\n  private drawCommand: WindFill | Fill;\n\n  constructor(gl: WebGLRenderingContext, options?: Partial<IOptions>) {\n    this.gl = gl;\n    this.uid = `ScalarFill_${uid}`;\n    uid++;\n\n    if (!this.gl) {\n      throw new Error('initialize error');\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.opacity = this.options.opacity || 1;\n  }\n\n  public updateOptions(options: Partial<IOptions>) {\n    this.options = {\n      ...this.options,\n      ...options,\n    };\n\n    this.buildColorRamp();\n\n    if (typeof this.options.getZoom === 'function') {\n      this.setOpacity(\n        createZoom(\n          this.uid,\n          this.options.getZoom(),\n          'opacity',\n          this.options.styleSpec,\n          true,\n        ),\n      );\n    }\n  }\n\n  public setFillColor() {\n    this.buildColorRamp();\n  }\n\n  public setOpacity(opacity: number) {\n    this.opacity = opacity;\n  }\n\n  public handleZoom() {\n    if (typeof this.options.getZoom === 'function') {\n      this.setOpacity(\n        createZoom(\n          this.uid,\n          this.options.getZoom(),\n          'opacity',\n          this.options.styleSpec,\n        ),\n      );\n    }\n  }\n\n  public buildColorRamp() {\n    const { data, colorRange } = createLinearGradient(\n      [],\n      this.options.styleSpec?.['fill-color'] as any[],\n    );\n\n    if (colorRange) {\n      this.colorRange = colorRange;\n    }\n\n    if (data) {\n      this.colorRampTexture = createTexture(\n        this.gl,\n        this.gl.NEAREST,\n        data,\n        16,\n        16,\n      );\n    }\n  }\n\n  public initialize(gl: WebGLRenderingContext) {\n    if (!this.drawCommand) {\n      if (this.options.renderForm === 'rg') {\n        this.drawCommand = new WindFill(\n          gl,\n          undefined,\n          undefined,\n          this.options.injectShaderModules,\n        );\n      } else if (this.options.renderForm === 'r') {\n        this.drawCommand = new Fill(\n          gl,\n          undefined,\n          undefined,\n          this.options.injectShaderModules,\n        );\n      } else {\n        console.warn('This type is not supported temporarily');\n      }\n    }\n\n    this.buildColorRamp();\n\n    if (typeof this.options.getZoom === 'function') {\n      this.setOpacity(\n        createZoom(\n          this.uid,\n          this.options.getZoom(),\n          'opacity',\n          this.options.styleSpec,\n        ),\n      );\n    }\n  }\n\n  public initializeVertex(coordinates: number[][]) {\n    let i = 0;\n    const len = coordinates.length;\n    const points: [number, number][] = [];\n    for (; i < len; i++) {\n      const coords = coordinates[i];\n      const mc = this.getMercatorCoordinate(coords as [number, number]);\n      points.push([mc[0], mc[1]]);\n    }\n\n    // @ts-ignore\n    const buffers = (\n      this.options.createPlaneBuffer || defaultOptions.createPlaneBuffer\n    )(\n      points,\n      (this.options.widthSegments as number) || 1,\n      (this.options.heightSegments as number) || 1,\n    );\n\n    return {\n      indexes: buffers.elements.data,\n      wireframeIndexes: buffers.wireframeElements.data,\n      quadBuffer: createBuffer(\n        this.gl,\n        new Float32Array(buffers.position.data),\n      ),\n      quad64LowBuffer: createBuffer(\n        this.gl,\n        new Float32Array(buffers.positionLow.data),\n      ),\n      texCoordBuffer: createBuffer(this.gl, new Float32Array(buffers.uvs.data)),\n    };\n  }\n\n  public getTextureData(data: IJsonArrayData | IImageData): Promise<IData> {\n    return new Promise((resolve, reject) => {\n      if (data.type === 'image' && data.url) {\n        loadImage(data.url)\n          .then((image) => {\n            // this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n            const processedData: IData = {\n              width: image.width,\n              height: image.height,\n              texture: createTexture(\n                this.gl,\n                this.gl.LINEAR,\n                image,\n                image.width,\n                image.height,\n              ),\n              ...this.initializeVertex(data.extent),\n            };\n\n            if (this.options.renderForm === 'rg') {\n              processedData.uMin = data.uMin;\n              processedData.uMax = data.uMax;\n              processedData.vMin = data.vMin;\n              processedData.vMax = data.vMax;\n            } else if (this.options.renderForm === 'r') {\n              processedData.min = data.min;\n              processedData.max = data.max;\n            } else {\n              console.warn('This type is not supported temporarily');\n            }\n\n            resolve(processedData);\n          })\n          .catch((error) => reject(error));\n      } else if (data.type === 'jsonArray' && data.data) {\n        const gfsData = data.data;\n        let pos;\n        if (data.extent) {\n          // tip: fix extent\n          pos = data.extent;\n        } else {\n          pos = [\n            [gfsData[0].header.lo1, gfsData[0].header.la1],\n            [gfsData[0].header.lo1, gfsData[0].header.la2],\n            [gfsData[0].header.lo2, gfsData[0].header.la1],\n            [gfsData[0].header.lo2, gfsData[0].header.la2],\n          ];\n        }\n\n        const processedData: IData = {\n          width: gfsData[0].header.nx,\n          height: gfsData[0].header.ny,\n          ...this.initializeVertex(pos),\n        };\n\n        if (!this.worker) {\n          this.worker = new DataProcess();\n          this.worker.addEventListener('message', ({ data: payload }: any) => {\n            if (this.options.renderForm === 'rg') {\n              processedData.uMin = payload[1];\n              processedData.uMax = payload[2];\n              processedData.vMin = payload[3];\n              processedData.vMax = payload[4];\n              processedData.texture = createTexture(\n                this.gl,\n                this.gl.LINEAR,\n                new Uint8Array(payload[0]),\n                processedData.width,\n                processedData.height,\n              );\n            } else if (this.options.renderForm === 'r') {\n              processedData.min = payload[1];\n              processedData.max = payload[2];\n              processedData.texture = createTexture(\n                this.gl,\n                this.gl.LINEAR,\n                new Uint8Array(payload[0]),\n                processedData.width,\n                processedData.height,\n              );\n            } else {\n              console.warn('This type is not supported temporarily');\n            }\n\n            resolve(processedData);\n          });\n        }\n\n        if (this.options.renderForm === 'rg') {\n          let uComp: IGFSItem;\n          let vComp: IGFSItem;\n\n          // if ((process.env.NODE_ENV as string) === ('development' as string)) {\n          //   console.time('format-data');\n          // }\n\n          gfsData.forEach((record: IGFSItem) => {\n            switch (\n              record.header.parameterCategory +\n              ',' +\n              record.header.parameterNumber\n            ) {\n              case '1,2':\n              case '2,2':\n                uComp = record;\n                break;\n              case '1,3':\n              case '2,3':\n                vComp = record;\n                break;\n            }\n          });\n\n          // @ts-ignore\n          const u = new Float32Array(uComp.data);\n          // @ts-ignore\n          const v = new Float32Array(vComp.data);\n          this.worker.postMessage(['rg', u, v]); // TIP: 需要确定transfer是否支持多个\n        } else if (this.options.renderForm === 'r') {\n          // processedData.min = data.min;\n          // processedData.max = data.max;\n          const singleData = new Float32Array(gfsData[0].data);\n          this.worker.postMessage(['r', singleData]);\n        } else {\n          console.warn('This type is not supported temporarily');\n        }\n      }\n    });\n  }\n\n  public setData(\n    data: IJsonArrayData | IImageData,\n    cb?: (args?: boolean) => void,\n  ) {\n    if (this.gl && data) {\n      // Error Prevention\n      this.getTextureData(data)\n        .then((d) => {\n          this.data = d;\n\n          cb && cb(true);\n\n          if (this.data) {\n            this.initialize(this.gl);\n          }\n\n          if (this.options.triggerRepaint) {\n            this.handleZoom();\n            this.options.triggerRepaint();\n          }\n        })\n        .catch((error) => {\n          cb && cb(false);\n          console.error(error);\n        });\n    }\n  }\n\n  public getData() {\n    return this.data;\n  }\n\n  public getMercatorCoordinate([lng, lat]: [number, number]): [number, number] {\n    return [lng, lat];\n  }\n\n  public prerender() {}\n\n  public render(\n    matrix: number[],\n    offsetX?: number,\n    cameraParams?: {\n      cameraEye: number[];\n      cameraEye64Low: number[];\n    },\n  ) {\n    if (\n      this.data &&\n      this.drawCommand &&\n      this.data.texture &&\n      this.colorRampTexture\n    ) {\n      const opacity = this.opacity;\n\n      const uniforms: any = {\n        u_opacity: isNumber(opacity) ? opacity : 1,\n        u_image_res: [this.data.width, this.data.height],\n        u_matrix: matrix,\n        u_offset: isNumber(offsetX) ? offsetX : 0,\n        u_color_ramp: this.colorRampTexture,\n        u_color_range: this.colorRange,\n        u_mapping_range: this.options.mappingRange || [0, 0], // 映射高度\n      };\n\n      if (cameraParams) {\n        uniforms.u_cameraEye = cameraParams.cameraEye;\n        uniforms.u_cameraEye64Low = cameraParams.cameraEye64Low;\n      }\n\n      if (this.options.renderForm === 'rg') {\n        uniforms.u_wind_min = [this.data.uMin, this.data.vMin];\n        uniforms.u_wind_max = [this.data.uMax, this.data.vMax];\n        uniforms.u_wind = this.data.texture;\n        const speeds = [\n          Math.sqrt(\n            // @ts-ignore\n            this.data.uMin * this.data.uMin + this.data.vMin * this.data.vMin,\n          ),\n          Math.sqrt(\n            // @ts-ignore\n            this.data.uMin * this.data.uMin + this.data.vMax * this.data.vMax,\n          ),\n          Math.sqrt(\n            // @ts-ignore\n            this.data.uMax * this.data.uMax + this.data.vMax * this.data.vMax,\n          ),\n          Math.sqrt(\n            // @ts-ignore\n            this.data.uMax * this.data.uMax + this.data.vMin * this.data.vMin,\n          ),\n        ];\n        const min = 0;\n        const max = Math.max(...speeds);\n        uniforms.u_display_range = this.options.displayRange || [min, max];\n      } else if (this.options.renderForm === 'r') {\n        uniforms.u_range = [this.data.min, this.data.max];\n        uniforms.u_image = this.data.texture;\n        // 如果不指定，使用数据范围，并简单做一个数据 buffer\n        uniforms.u_display_range = this.options.displayRange || [\n          uniforms.u_range[0] - 1,\n          uniforms.u_range[1] + 1,\n        ];\n      } else {\n        console.warn('This type is not supported temporarily');\n      }\n\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      this.gl.enable(this.gl.DEPTH_TEST);\n      this.gl.depthMask(true);\n      this.gl.depthFunc(this.gl.LEQUAL);\n\n      const data = this.options.wireframe\n        ? this.data.wireframeIndexes\n        : this.data.indexes;\n\n      this.drawCommand\n        .active()\n        // .resize()\n        .setUniforms(uniforms)\n        .setAttributes({\n          instancePositions: {\n            buffer: this.data.quadBuffer,\n            numComponents: 3,\n          },\n          instancePositions64Low: {\n            buffer: this.data.quad64LowBuffer,\n            numComponents: 3,\n          },\n          a_texCoord: {\n            buffer: this.data.texCoordBuffer,\n            numComponents: 2,\n          },\n        })\n        .elements({\n          data: new Uint32Array(data as number[]),\n          primitive: this.options.wireframe ? this.gl.LINES : this.gl.TRIANGLES,\n          count: data?.length,\n          usage: this.gl.STATIC_DRAW,\n        })\n        .draw();\n\n      if (!depthEnabled) {\n        this.gl.disable(this.gl.DEPTH_TEST);\n      }\n    }\n  }\n\n  public postrender() {}\n\n  public destroyData() {\n    if (this.data) {\n      // const {\n      //   texture,\n      //   quadBuffer,\n      //   quad64LowBuffer,\n      //   texCoordBuffer,\n      // } = this.data;\n      // if (texture) {\n      //   this.gl.deleteTexture(texture);\n      // }\n      // if (quadBuffer) {\n      //   this.gl.deleteBuffer(quadBuffer);\n      // }\n      //\n      // if (quad64LowBuffer) {\n      //   this.gl.deleteBuffer(quad64LowBuffer);\n      // }\n      //\n      // if (texCoordBuffer) {\n      //   this.gl.deleteBuffer(texCoordBuffer);\n      // }\n      // delete this.data;\n    }\n  }\n\n  public destroyed() {\n    this.destroyData();\n    if (this.worker) {\n      this.worker.terminate();\n    }\n  }\n}\n","export interface IOptions {\n  callback: (time: number) => void;\n}\n\nconst defaultOptions = {\n  callback: () => void 0,\n};\n\nexport class Raf {\n  public options: IOptions;\n  private raf: number;\n  private animating: boolean;\n  private isVisible: boolean;\n\n  constructor(options: Partial<IOptions> = {}) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.reset();\n\n    this.animate = this.animate.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  public reset() {\n    this.animating = false;\n    this.isVisible = true;\n    if (this.raf !== undefined) {\n      cancelAnimationFrame(this.raf);\n    }\n  }\n\n  public start() {\n    if (this.animating) {\n      return;\n    }\n    this.animating = true;\n    document.addEventListener(\n      'visibilitychange',\n      this.onVisibilityChange,\n      false,\n    );\n    this.raf = requestAnimationFrame(this.animate);\n  }\n\n  public stop() {\n    this.reset();\n    document.removeEventListener(\n      'visibilitychange',\n      this.onVisibilityChange,\n      false,\n    );\n  }\n\n  private animate() {\n    if (!this.animating || !this.isVisible) {\n      return;\n    }\n    this.options.callback((performance || Date).now());\n    this.raf = requestAnimationFrame(this.animate);\n  }\n\n  private onVisibilityChange() {\n    this.isVisible = !document.hidden;\n\n    if (this.isVisible) {\n      this.reset();\n      this.start();\n    }\n  }\n}\n","import Base from './Base';\nimport drawFrag from './shaders/particles/draw.frag.glsl';\nimport drawVert from './shaders/particles/draw.vert.glsl';\nimport screenFrag from './shaders/particles/screen.frag.glsl';\nimport screenVert from './shaders/particles/screen.vert.glsl';\nimport updateFrag from './shaders/particles/update.frag.glsl';\nimport updateVert from './shaders/particles/update.vert.glsl';\n\nimport {\n  bindFramebuffer,\n  clearScene,\n  createBuffer,\n  createTexture,\n  loadImage,\n  resizeFramebuffer,\n  resizeTexture,\n  updateBufferData,\n} from './utils/gl-utils';\nimport { Raf } from './utils/raf';\nimport { createLinearGradient, createZoom } from './utils/style-parser';\n\nexport interface IWindOptions {\n  opacity: number;\n  fadeOpacity: number;\n  speedFactor: number;\n  dropRate: number;\n  dropRateBump: number;\n  lineWidth: number;\n  visible?: boolean;\n  styleSpec?: {\n    color: any[];\n    opacity: number | any[];\n    numParticles: number | any[];\n  };\n  getZoom: () => number;\n  triggerRepaint?: () => void;\n  getSize: () => [number, number];\n  getExtent: () => [number, number, number, number];\n  interacting: () => boolean;\n  getWorlds: () => number[];\n}\n\nexport interface IImageData {\n  type: 'image';\n  url: string;\n  extent: Array<[number, number]>;\n  uMin?: number;\n  uMax?: number;\n  vMin?: number;\n  vMax?: number;\n  min?: number;\n  max?: number;\n  nodata?: number;\n}\n\nexport interface IData {\n  width: number;\n  height: number;\n  uMin?: number;\n  uMax?: number;\n  vMin?: number;\n  vMax?: number;\n  min?: number;\n  max?: number;\n  nodata?: number;\n  texCoordBuffer: WebGLBuffer | null;\n  quadBuffer: WebGLBuffer | null;\n  buffer: WebGLBuffer | null;\n  backgroundBuffer: WebGLBuffer | null;\n  backgroundTexCoordBuffer: WebGLBuffer | null;\n  texture?: WebGLTexture | null;\n}\n\nexport const defaultOptions = {\n  styleSpec: {\n    color: [\n      'interpolate',\n      ['linear'],\n      ['get', 'value'],\n      0.0,\n      '#fff',\n      100.0,\n      '#fff',\n    ],\n    opacity: 1,\n    numParticles: 65535,\n  },\n  opacity: 1,\n  lineWidth: 2,\n  speedFactor: 1,\n  fadeOpacity: 0.93,\n  dropRate: 0.003,\n  dropRateBump: 0.002,\n};\n\nlet uid = 0;\n\nexport default class WindParticles {\n  public gl: WebGLRenderingContext;\n\n  public data: IData;\n\n  private privateNumParticles: number;\n\n  private particleStateResolution: number;\n\n  private currentParticleStateTexture: WebGLTexture | null;\n\n  private nextParticleStateTexture: WebGLTexture | null;\n\n  private particleIndexBuffer: WebGLBuffer | null;\n\n  private backgroundTexture: WebGLTexture | null;\n\n  private screenTexture: WebGLTexture | null;\n\n  private drawCommand: Base;\n  private updateCommand: Base;\n  private screenCommand: Base;\n  private raf: Raf;\n  private fbo: WebGLFramebuffer | null;\n  private colorRampTexture: WebGLTexture | null;\n\n  private options: IWindOptions;\n  private opacity: number;\n  private colorRange: [number, number];\n  private size: number[];\n  private renderExtent: number[];\n  private visible: boolean;\n  private alpha: number;\n\n  private frameTime: number;\n  private lastTime: number;\n  private readonly uid: string;\n  constructor(\n    gl: WebGLRenderingContext,\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    options: IWindOptions = {} as IWindOptions,\n  ) {\n    this.gl = gl;\n\n    this.uid = `WindParticles_${uid}`;\n    uid++;\n\n    if (!this.gl) {\n      throw new Error('initialize error');\n    }\n\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.opacity = this.options.opacity || 1;\n    this.visible = this.options.visible !== undefined || true;\n    this.alpha = 0.9;\n    this.frameTime = 0;\n    this.lastTime = 0;\n\n    this.initialize(this.gl);\n  }\n\n  public initialize(gl: WebGLRenderingContext) {\n    this.drawCommand = new Base(gl, drawVert, drawFrag);\n    this.drawCommand.draw = function() {\n      this.gl.drawArrays(this.primitive, 0, this.count);\n    };\n    this.updateCommand = new Base(gl, updateVert, updateFrag);\n    this.updateCommand.draw = function() {\n      this.gl.drawArrays(this.primitive, 0, 4);\n    };\n    this.screenCommand = new Base(gl, screenVert, screenFrag);\n    this.screenCommand.draw = function() {\n      this.gl.drawArrays(this.primitive, 0, 4);\n    };\n\n    this.fbo = gl.createFramebuffer();\n\n    this.raf = new Raf({\n      callback: () => {\n        if (this.options.triggerRepaint) {\n          this.options.triggerRepaint();\n        }\n      },\n    });\n\n    this.resize();\n\n    this.buildColorRamp();\n\n    if (typeof this.options.getZoom === 'function') {\n      const zoom = this.options.getZoom();\n      this.setOpacity(\n        createZoom(this.uid, zoom, 'opacity', this.options.styleSpec),\n      );\n\n      this.numParticles = createZoom(\n        this.uid,\n        zoom,\n        'numParticles',\n        this.options.styleSpec,\n      );\n    }\n\n    this.start();\n  }\n\n  set numParticles(numParticles: number) {\n    if (numParticles === undefined) {\n      return;\n    }\n    const gl = this.gl;\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    const particleRes = Math.ceil(Math.sqrt(numParticles));\n    this.particleStateResolution = particleRes;\n    this.privateNumParticles = particleRes * particleRes;\n\n    const particleState = new Uint8Array(this.privateNumParticles * 4);\n    for (let i = 0; i < particleState.length; i++) {\n      // randomize the initial particle positions\n      particleState[i] = Math.floor(Math.random() * 256);\n    }\n    if (!this.currentParticleStateTexture) {\n      // textures to hold the particle state for the current and the next frame\n      this.currentParticleStateTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        particleState,\n        particleRes,\n        particleRes,\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.currentParticleStateTexture,\n        particleRes,\n        particleRes,\n        particleState,\n      );\n    }\n    if (!this.nextParticleStateTexture) {\n      this.nextParticleStateTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        particleState,\n        particleRes,\n        particleRes,\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.nextParticleStateTexture,\n        particleRes,\n        particleRes,\n        particleState,\n      );\n    }\n    const num = this.privateNumParticles * 6;\n    const particleIndices = new Float32Array(num);\n    for (let i = 0; i < num; i++) {\n      particleIndices[i] = i;\n    }\n    if (!this.particleIndexBuffer) {\n      this.particleIndexBuffer = createBuffer(gl, particleIndices);\n    } else {\n      updateBufferData(gl, this.particleIndexBuffer, particleIndices);\n    }\n  }\n\n  get numParticles() {\n    return this.privateNumParticles;\n  }\n\n  public updateOptions(options: Partial<IWindOptions>) {\n    const styleSpec = (options.styleSpec || {}) as {\n      color: any[];\n      opacity: number | any[];\n      numParticles: number | any[];\n    };\n    this.options = {\n      ...this.options,\n      ...options,\n      styleSpec: {\n        ...this.options.styleSpec,\n        ...styleSpec,\n      },\n    };\n\n    this.buildColorRamp();\n\n    if (typeof this.options.getZoom === 'function') {\n      const zoom = this.options.getZoom();\n      this.setOpacity(\n        createZoom(this.uid, zoom, 'opacity', this.options.styleSpec, true),\n      );\n\n      this.numParticles = createZoom(\n        this.uid,\n        zoom,\n        'numParticles',\n        this.options.styleSpec,\n        true,\n      );\n    }\n  }\n\n  public setOpacity(opacity: number) {\n    this.opacity = opacity;\n  }\n\n  public getOpacity() {\n    return this.opacity;\n  }\n\n  public handleMoveend() {\n    this.updateRenderState();\n    clearScene(this.gl, [0, 0, 0, 0]);\n  }\n\n  public handleMovestart() {\n    this.alpha = 0.0;\n  }\n\n  public handleZoom() {\n    if (typeof this.options.getZoom === 'function') {\n      const zoom = this.options.getZoom();\n      this.setOpacity(\n        createZoom(this.uid, zoom, 'opacity', this.options.styleSpec),\n      );\n\n      this.numParticles = createZoom(\n        this.uid,\n        zoom,\n        'numParticles',\n        this.options.styleSpec,\n      );\n    }\n  }\n\n  public buildColorRamp() {\n    const { data, colorRange } = createLinearGradient(\n      [],\n      this.options.styleSpec?.color as any[],\n    );\n\n    if (colorRange) {\n      this.colorRange = colorRange;\n    }\n\n    if (data) {\n      this.colorRampTexture = createTexture(\n        this.gl,\n        this.gl.NEAREST,\n        data,\n        16,\n        16,\n      );\n    }\n  }\n\n  public drawTexture(matrix: number[]) {\n    if (this.fbo && this.screenTexture && this.nextParticleStateTexture) {\n      bindFramebuffer(this.gl, this.fbo, this.screenTexture);\n\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.disable(this.gl.BLEND);\n      this.screenCommand\n        .active()\n        .resize(...this.size)\n        .setUniforms({\n          u_screen: this.backgroundTexture,\n          u_opacity: this.options.fadeOpacity,\n          u_fade: 1,\n        })\n        .setAttributes({\n          a_pos: {\n            buffer: this.data.backgroundBuffer,\n            numComponents: 2,\n          },\n          a_tex_pos: {\n            buffer: this.data.backgroundTexCoordBuffer,\n            numComponents: 2,\n          },\n        })\n        .setPrimitive(this.gl.TRIANGLE_STRIP)\n        .draw();\n      if (depthEnabled) {\n        this.gl.enable(this.gl.DEPTH_TEST);\n      }\n      if (blendingEnabled) {\n        this.gl.enable(this.gl.BLEND);\n      }\n\n      this.drawParticles(matrix);\n\n      bindFramebuffer(this.gl, null);\n\n      [this.backgroundTexture, this.screenTexture] = [\n        this.screenTexture,\n        this.backgroundTexture,\n      ];\n    }\n  }\n\n  public drawScreen() {\n    const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n    const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.blendColor(0, 0, 0, 0);\n    this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n    this.screenCommand\n      .active()\n      .resize()\n      .setUniforms({\n        u_screen: this.screenTexture,\n        u_opacity: this.visible ? this.opacity : 0,\n        u_fade: this.alpha,\n      })\n      .setAttributes({\n        a_pos: {\n          buffer: this.data.buffer,\n          numComponents: 2,\n        },\n        a_tex_pos: {\n          buffer: this.data.texCoordBuffer,\n          numComponents: 2,\n        },\n      })\n      .setPrimitive(this.gl.TRIANGLE_STRIP)\n      .draw();\n    if (depthEnabled) {\n      this.gl.enable(this.gl.DEPTH_TEST);\n    }\n    if (!blendingEnabled) {\n      this.gl.disable(this.gl.BLEND);\n    }\n  }\n\n  public updateParticles() {\n    if (\n      this.fbo &&\n      this.currentParticleStateTexture &&\n      this.nextParticleStateTexture\n    ) {\n      bindFramebuffer(this.gl, this.fbo, this.nextParticleStateTexture);\n      const timeScale = this.options.speedFactor * 2.5;\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.disable(this.gl.BLEND);\n      this.updateCommand\n        .active()\n        .resize(this.particleStateResolution, this.particleStateResolution)\n        .setUniforms({\n          u_wind_res: [this.data.width, this.data.height],\n          u_rand_seed: Math.random(),\n          u_wind_range: [\n            this.data.uMin,\n            this.data.uMax,\n            this.data.vMin,\n            this.data.vMax,\n          ],\n          u_drop_rate: this.options.dropRate,\n          u_drop_rate_bump: this.options.dropRateBump,\n          u_speed_factor: [\n            (timeScale * this.frameTime) / this.size[0],\n            (timeScale * this.frameTime) / this.size[1],\n          ],\n          u_wind: this.data.texture,\n          u_bbox: this.renderExtent,\n          nodata: this.data.nodata,\n          u_particles: this.currentParticleStateTexture,\n        })\n        .setAttributes({\n          a_pos: {\n            buffer: this.data.quadBuffer,\n            numComponents: 2,\n          },\n        })\n        .setPrimitive(this.gl.TRIANGLE_STRIP)\n        .draw();\n      if (depthEnabled) {\n        this.gl.enable(this.gl.DEPTH_TEST);\n      }\n      if (blendingEnabled) {\n        this.gl.enable(this.gl.BLEND);\n      }\n      // bindFramebuffer(this.gl, null);\n      // swap the particle state textures so the new one becomes the current one\n      [this.currentParticleStateTexture, this.nextParticleStateTexture] = [\n        this.nextParticleStateTexture,\n        this.currentParticleStateTexture,\n      ];\n    }\n  }\n\n  public drawParticles(matrix: number[]) {\n    if (\n      this.particleIndexBuffer &&\n      this.currentParticleStateTexture &&\n      this.nextParticleStateTexture\n    ) {\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.disable(this.gl.BLEND);\n      const zoom = this.options.getZoom();\n      const worlds = this.options.getWorlds();\n      for (let i = 0; i < worlds.length; i++) {\n        this.drawCommand\n          .active()\n          .setUniforms({\n            u_width: this.options.lineWidth,\n            u_world: this.size,\n            u_matrix: matrix,\n            u_zoom: zoom,\n            u_bbox: this.renderExtent,\n            u_offset: worlds[i],\n            u_wind: this.data.texture,\n            u_wind_res: [this.data.width, this.data.height],\n            u_wind_range: [\n              this.data.uMin,\n              this.data.uMax,\n              this.data.vMin,\n              this.data.vMax,\n            ],\n            u_color_ramp: this.colorRampTexture,\n            u_color_range: this.colorRange,\n            u_aspectRatio: this.size[0] / this.size[1],\n            u_particles_current: this.currentParticleStateTexture,\n            u_particles_next: this.nextParticleStateTexture,\n            u_particles_res: this.particleStateResolution,\n          })\n          .setAttributes({\n            a_index: {\n              buffer: this.particleIndexBuffer,\n              numComponents: 1,\n            },\n          })\n          .setPrimitive(this.gl.TRIANGLES)\n          .runTimes(this.particleStateResolution ** 2 * 6)\n          .draw();\n      }\n\n      if (blendingEnabled) {\n        this.gl.enable(this.gl.BLEND);\n      }\n\n      if (depthEnabled) {\n        this.gl.enable(this.gl.DEPTH_TEST);\n      }\n    }\n  }\n\n  public updateRenderState() {\n    this.renderExtent = this.options.getExtent();\n  }\n\n  public resize() {\n    const gl = this.gl;\n    this.size = this.options.getSize();\n    this.updateRenderState();\n    const emptyPixels = new Uint8Array(this.size[0] * this.size[1] * 4);\n    // screen textures to hold the drawn screen for the previous and the current frame\n    if (!this.backgroundTexture) {\n      this.backgroundTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        emptyPixels,\n        this.size[0],\n        this.size[1],\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.backgroundTexture,\n        this.size[0],\n        this.size[1],\n        emptyPixels,\n      );\n    }\n    if (!this.screenTexture) {\n      this.screenTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        emptyPixels,\n        this.size[0],\n        this.size[1],\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.screenTexture,\n        this.size[0],\n        this.size[1],\n        emptyPixels,\n      );\n    }\n    if (this.fbo) {\n      resizeFramebuffer(\n        gl,\n        this.fbo,\n        this.size[0],\n        this.size[1],\n        this.screenTexture as any,\n      );\n    }\n  }\n\n  public start() {\n    this.raf.start();\n    if (this.options.triggerRepaint) {\n      this.options.triggerRepaint();\n    }\n  }\n\n  public stop() {\n    this.raf.stop();\n    clearScene(this.gl, [0, 0, 0, 0]);\n    if (this.options.triggerRepaint) {\n      this.options.triggerRepaint();\n    }\n  }\n\n  public prerender(matrix: number[]) {\n    if (this.data) {\n      this.updateParticles();\n      this.drawTexture(matrix);\n\n      const now = 0.001 * Date.now();\n      this.frameTime = Math.min(now - (this.lastTime || 0), 0.05);\n      this.lastTime = now;\n    }\n  }\n\n  public render() {\n    if (this.data) {\n      if (this.options.interacting()) {\n        if (this.alpha < 1) {\n          this.alpha += 3 * this.frameTime;\n\n          if (this.alpha > 1 || !this.frameTime) {\n            this.alpha = 1;\n          }\n        }\n      }\n      this.drawScreen();\n    }\n    return this;\n  }\n\n  public initializeVertex(coordinates: number[][]) {\n    let i = 0;\n    const len = coordinates.length;\n    const instancePositions = new Float32Array(len * 2);\n    for (; i < len; i++) {\n      const coords = coordinates[i];\n      const mc = this.getMercatorCoordinate(coords as [number, number]);\n      instancePositions[i * 2] = mc[0];\n      instancePositions[i * 2 + 1] = mc[1];\n    }\n\n    return {\n      quadBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\n      ),\n      buffer: createBuffer(this.gl, instancePositions),\n      texCoordBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\n      ),\n      backgroundBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\n      ),\n      backgroundTexCoordBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]),\n      ),\n    };\n  }\n\n  public getTextureData(data: IImageData): Promise<IData> {\n    return new Promise((resolve, reject) => {\n      if (data.type === 'image' && data.url) {\n        loadImage(data.url)\n          .then((image) => {\n            const processedData: IData = {\n              width: image.width,\n              height: image.height,\n              texture: createTexture(\n                this.gl,\n                this.gl.LINEAR,\n                image,\n                image.width,\n                image.height,\n              ),\n              nodata: data.nodata || 0,\n              ...this.initializeVertex(data.extent),\n            };\n\n            processedData.uMin = data.uMin;\n            processedData.uMax = data.uMax;\n            processedData.vMin = data.vMin;\n            processedData.vMax = data.vMax;\n\n            resolve(processedData);\n          })\n          .catch((error) => reject(error));\n      }\n    });\n  }\n\n  public setData(data: IImageData, cb?: (args?: boolean) => void) {\n    if (this.gl && data) {\n      // Error Prevention\n      this.getTextureData(data)\n        .then((d) => {\n          this.data = d;\n\n          cb && cb(true);\n\n          if (this.options.triggerRepaint) {\n            this.options.triggerRepaint();\n          }\n        })\n        .catch((error) => {\n          cb && cb(false);\n          console.error(error);\n        });\n    }\n  }\n\n  public getData() {\n    return this.data;\n  }\n\n  public getMercatorCoordinate([lng, lat]: [number, number]): [number, number] {\n    return [lng, lat];\n  }\n\n  public destroyData() {\n    if (this.data) {\n      const {\n        texture,\n        quadBuffer,\n        buffer,\n        texCoordBuffer,\n        backgroundBuffer,\n        backgroundTexCoordBuffer,\n      } = this.data;\n      if (texture) {\n        this.gl.deleteTexture(texture);\n      }\n      if (buffer) {\n        this.gl.deleteBuffer(buffer);\n      }\n      if (quadBuffer) {\n        this.gl.deleteBuffer(quadBuffer);\n      }\n\n      if (texCoordBuffer) {\n        this.gl.deleteBuffer(texCoordBuffer);\n      }\n      if (backgroundBuffer) {\n        this.gl.deleteBuffer(backgroundBuffer);\n      }\n      if (backgroundTexCoordBuffer) {\n        this.gl.deleteBuffer(backgroundTexCoordBuffer);\n      }\n      // @ts-ignore\n      delete this.data;\n    }\n  }\n\n  public destroyed() {\n    this.stop();\n    if (this.currentParticleStateTexture) {\n      this.gl.deleteTexture(this.currentParticleStateTexture);\n      this.currentParticleStateTexture = null;\n    }\n    if (this.nextParticleStateTexture) {\n      this.gl.deleteTexture(this.nextParticleStateTexture);\n      this.nextParticleStateTexture = null;\n    }\n\n    if (this.backgroundTexture) {\n      this.gl.deleteTexture(this.backgroundTexture);\n      this.backgroundTexture = null;\n    }\n    if (this.screenTexture) {\n      this.gl.deleteTexture(this.screenTexture);\n      this.screenTexture = null;\n    }\n\n    if (this.fbo) {\n      this.gl.deleteFramebuffer(this.fbo);\n      this.fbo = null;\n    }\n    this.destroyData();\n  }\n}\n"],"names":["units","FillVert","FillFrag","defaultOptions","uid","DataProcess"],"mappings":"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"}