{"version":3,"file":"mapbox-wind.js","sources":["../../core/dist/wind-core.esm.js","../src/Overlay.ts","../../gl-core/dist/wind-gl-core.esm.js","../src/ScalarFill.ts","../src/Particles.ts","../src/index.ts"],"sourcesContent":["const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst symToStringTag = typeof Symbol !== \"undefined\" ? Symbol.toStringTag : void 0;\nfunction baseGetTag(value) {\n  if (value === null) {\n    return value === void 0 ? \"[object Undefined]\" : \"[object Null]\";\n  }\n  if (!(symToStringTag && symToStringTag in Object(value))) {\n    return toString.call(value);\n  }\n  const isOwn = hasOwnProperty.call(value, symToStringTag);\n  const tag = value[symToStringTag];\n  let unmasked = false;\n  try {\n    value[symToStringTag] = void 0;\n    unmasked = true;\n  } catch (e) {\n  }\n  const result = Object.prototype.toString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\nfunction TypeOf(value) {\n  return Object.prototype.toString.call(value).slice(8, -1).toLowerCase();\n}\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  const tag = baseGetTag(value);\n  return tag === \"[object Function]\" || tag === \"[object AsyncFunction]\" || tag === \"[object GeneratorFunction]\" || tag === \"[object Proxy]\";\n}\nfunction isObject(value) {\n  const type = typeof value;\n  return value !== null && (type === \"object\" || type === \"function\");\n}\nfunction isDate(val) {\n  return Object.prototype.toString.call(val) === \"[object Date]\";\n}\nfunction isArrayBuffer(val) {\n  return Object.prototype.toString.call(val) === \"[object ArrayBuffer]\";\n}\nfunction isString(value) {\n  if (value == null) {\n    return false;\n  }\n  return typeof value === \"string\" || value.constructor !== null && value.constructor === String;\n}\nfunction isNumber(value) {\n  return Object.prototype.toString.call(value) === \"[object Number]\" && !isNaN(value);\n}\nfunction isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\nfunction isNull(obj) {\n  return obj == null;\n}\nfunction isArray(arr) {\n  return Array.isArray(arr);\n}\nfunction assign(target, ...sources) {\n  return Object.assign(target, ...sources);\n}\nfunction warnLog(msg, n) {\n  console.warn(`${n || \"wind-layer\"}: ${msg}`);\n}\nconst warnings = {};\nfunction warnOnce(namespaces, msg) {\n  if (!warnings[msg]) {\n    warnLog(msg, namespaces);\n    warnings[msg] = true;\n  }\n}\nfunction floorMod(a, n) {\n  return a - n * Math.floor(a / n);\n}\nfunction isValide(val) {\n  return val !== void 0 && val !== null && !isNaN(val);\n}\nfunction formatData(data, options = {}) {\n  let uComp = void 0;\n  let vComp = void 0;\n  data.forEach(function(record) {\n    switch (record.header.parameterCategory + \",\" + record.header.parameterNumber) {\n      case \"1,2\":\n      case \"2,2\":\n        uComp = record;\n        break;\n      case \"1,3\":\n      case \"2,3\":\n        vComp = record;\n        break;\n    }\n  });\n  if (!vComp || !uComp) {\n    return void 0;\n  }\n  const header = uComp.header;\n  const vectorField = new Field({\n    xmin: header.lo1,\n    ymin: header.la1,\n    xmax: header.lo2,\n    ymax: header.la2,\n    deltaX: header.dx,\n    deltaY: header.dy,\n    cols: header.nx,\n    rows: header.ny,\n    us: uComp.data,\n    vs: vComp.data,\n    ...options\n  });\n  return vectorField;\n}\nfunction createCanvas(width, height, retina, Canvas) {\n  if (typeof document !== \"undefined\") {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width * retina;\n    canvas.height = height * retina;\n    return canvas;\n  } else {\n    return new Canvas(width * retina, height * retina);\n  }\n}\nfunction removeDomNode(node) {\n  if (!node) {\n    return null;\n  }\n  if (node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n  return node;\n}\nconst keyword = /(\\D+)/;\nconst hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\nconst rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\nconst colorNames = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nfunction getColor(string) {\n  let rgb = [];\n  if (string.match(hex)) {\n    let match = string.match(hex);\n    if (match !== null) {\n      match = match[1];\n      for (let i = 0; i < 3; i++) {\n        const i2 = i * 2;\n        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n      }\n      rgb[3] = 1;\n    }\n  } else if (string.match(rgba)) {\n    const match = string.match(rgba);\n    for (let i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i + 1], 0);\n    }\n    if (match[4]) {\n      rgb[3] = parseFloat(match[4]);\n    } else {\n      rgb[3] = 1;\n    }\n  } else if (string.match(keyword)) {\n    const match = string.match(keyword);\n    if (match[1] === \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n    rgb = colorNames[match[1]];\n    if (!rgb) {\n      return null;\n    }\n    rgb[3] = 1;\n    return rgb;\n  } else {\n    return null;\n  }\n  return rgb;\n}\n\nclass Vector {\n  constructor(u, v) {\n    this.u = u;\n    this.v = v;\n    this.m = this.magnitude();\n  }\n  magnitude() {\n    return Math.sqrt(this.u ** 2 + this.v ** 2);\n  }\n  directionTo() {\n    const verticalAngle = Math.atan2(this.u, this.v);\n    let inDegrees = verticalAngle * (180 / Math.PI);\n    if (inDegrees < 0) {\n      inDegrees += 360;\n    }\n    return inDegrees;\n  }\n  directionFrom() {\n    const a = this.directionTo();\n    return (a + 180) % 360;\n  }\n}\n\nclass Field {\n  constructor(params) {\n    this.grid = [];\n    this.xmin = params.xmin;\n    this.xmax = params.xmax;\n    this.ymin = params.ymin;\n    this.ymax = params.ymax;\n    this.cols = params.cols;\n    this.rows = params.rows;\n    this.us = params.us;\n    this.vs = params.vs;\n    this.deltaX = params.deltaX;\n    this.deltaY = params.deltaY;\n    this.flipY = Boolean(params.flipY);\n    this.ymin = Math.min(params.ymax, params.ymin);\n    this.ymax = Math.max(params.ymax, params.ymin);\n    if (!(this.deltaY < 0 && this.ymin < this.ymax)) {\n      if (params.flipY === void 0) {\n        this.flipY = true;\n      }\n      console.warn(\"[wind-core]: The data is flipY\");\n    }\n    this.isFields = true;\n    const cols = Math.ceil((this.xmax - this.xmin) / params.deltaX);\n    const rows = Math.ceil((this.ymax - this.ymin) / params.deltaY);\n    if (cols !== this.cols || rows !== this.rows) {\n      console.warn(\"[wind-core]: The data grid not equal\");\n    }\n    this.isContinuous = Math.floor(this.cols * params.deltaX) >= 360;\n    this.translateX = \"translateX\" in params ? params.translateX : this.xmax > 180;\n    if (\"wrappedX\" in params) {\n      warnOnce(\"[wind-core]: \", \"`wrappedX` namespace will deprecated please use `translateX` instead\\uFF01\");\n    }\n    this.wrapX = Boolean(params.wrapX);\n    this.grid = this.buildGrid();\n    this.range = this.calculateRange();\n  }\n  buildGrid() {\n    let grid = [];\n    let p = 0;\n    const { rows, cols, us, vs } = this;\n    for (let j = 0; j < rows; j++) {\n      const row = [];\n      for (let i = 0; i < cols; i++, p++) {\n        let u = us[p];\n        let v = vs[p];\n        let valid = this.isValid(u) && this.isValid(v);\n        row[i] = valid ? new Vector(u, v) : null;\n      }\n      if (this.isContinuous) {\n        row.push(row[0]);\n      }\n      grid[j] = row;\n    }\n    return grid;\n  }\n  release() {\n    this.grid = [];\n  }\n  extent() {\n    return [\n      this.xmin,\n      this.ymin,\n      this.xmax,\n      this.ymax\n    ];\n  }\n  bilinearInterpolateVector(x, y, g00, g10, g01, g11) {\n    const rx = 1 - x;\n    const ry = 1 - y;\n    const a = rx * ry;\n    const b = x * ry;\n    const c = rx * y;\n    const d = x * y;\n    const u = g00.u * a + g10.u * b + g01.u * c + g11.u * d;\n    const v = g00.v * a + g10.v * b + g01.v * c + g11.v * d;\n    return new Vector(u, v);\n  }\n  calculateRange() {\n    if (!this.grid || !this.grid[0])\n      return;\n    const rows = this.grid.length;\n    const cols = this.grid[0].length;\n    let min;\n    let max;\n    for (let j = 0; j < rows; j++) {\n      for (let i = 0; i < cols; i++) {\n        const vec = this.grid[j][i];\n        if (vec !== null) {\n          const val = vec.m || vec.magnitude();\n          if (min === void 0) {\n            min = val;\n          } else if (max === void 0) {\n            max = val;\n            min = Math.min(min, max);\n            max = Math.max(min, max);\n          } else {\n            min = Math.min(val, min);\n            max = Math.max(val, max);\n          }\n        }\n      }\n    }\n    return [min, max];\n  }\n  isValid(x) {\n    return x !== null && x !== void 0;\n  }\n  getWrappedLongitudes() {\n    let xmin = this.xmin;\n    let xmax = this.xmax;\n    if (this.translateX) {\n      if (this.isContinuous) {\n        xmin = -180;\n        xmax = 180;\n      } else {\n        xmax = this.xmax - 360;\n        xmin = this.xmin - 360;\n      }\n    }\n    return [xmin, xmax];\n  }\n  contains(lon, lat) {\n    const [xmin, xmax] = this.getWrappedLongitudes();\n    let longitudeIn = lon >= xmin && lon <= xmax;\n    let latitudeIn;\n    if (this.deltaY >= 0) {\n      latitudeIn = lat >= this.ymin && lat <= this.ymax;\n    } else {\n      latitudeIn = lat >= this.ymax && lat <= this.ymin;\n    }\n    return longitudeIn && latitudeIn;\n  }\n  getDecimalIndexes(lon, lat) {\n    const i = floorMod(lon - this.xmin, 360) / this.deltaX;\n    if (this.flipY) {\n      const j = (this.ymax - lat) / this.deltaY;\n      return [i, j];\n    } else {\n      const j = (this.ymin + lat) / this.deltaY;\n      return [i, j];\n    }\n  }\n  valueAt(lon, lat) {\n    let flag = false;\n    if (this.wrapX) {\n      flag = true;\n    } else if (this.contains(lon, lat)) {\n      flag = true;\n    }\n    if (!flag)\n      return null;\n    const indexes = this.getDecimalIndexes(lon, lat);\n    let ii = Math.floor(indexes[0]);\n    let jj = Math.floor(indexes[1]);\n    const ci = this.clampColumnIndex(ii);\n    const cj = this.clampRowIndex(jj);\n    return this.valueAtIndexes(ci, cj);\n  }\n  interpolatedValueAt(lon, lat) {\n    let flag = false;\n    if (this.wrapX) {\n      flag = true;\n    } else if (this.contains(lon, lat)) {\n      flag = true;\n    }\n    if (!flag)\n      return null;\n    let [i, j] = this.getDecimalIndexes(lon, lat);\n    return this.interpolatePoint(i, j);\n  }\n  hasValueAt(lon, lat) {\n    let value = this.valueAt(lon, lat);\n    return value !== null;\n  }\n  interpolatePoint(i, j) {\n    const indexes = this.getFourSurroundingIndexes(i, j);\n    const [fi, ci, fj, cj] = indexes;\n    let values = this.getFourSurroundingValues(fi, ci, fj, cj);\n    if (values) {\n      const [g00, g10, g01, g11] = values;\n      return this.bilinearInterpolateVector(i - fi, j - fj, g00, g10, g01, g11);\n    }\n    return null;\n  }\n  clampColumnIndex(ii) {\n    let i = ii;\n    if (ii < 0) {\n      i = 0;\n    }\n    let maxCol = this.cols - 1;\n    if (ii > maxCol) {\n      i = maxCol;\n    }\n    return i;\n  }\n  clampRowIndex(jj) {\n    let j = jj;\n    if (jj < 0) {\n      j = 0;\n    }\n    let maxRow = this.rows - 1;\n    if (jj > maxRow) {\n      j = maxRow;\n    }\n    return j;\n  }\n  getFourSurroundingIndexes(i, j) {\n    let fi = Math.floor(i);\n    let ci = fi + 1;\n    if (this.isContinuous && ci >= this.cols) {\n      ci = 0;\n    }\n    ci = this.clampColumnIndex(ci);\n    let fj = this.clampRowIndex(Math.floor(j));\n    let cj = this.clampRowIndex(fj + 1);\n    return [fi, ci, fj, cj];\n  }\n  getFourSurroundingValues(fi, ci, fj, cj) {\n    let row;\n    if (row = this.grid[fj]) {\n      const g00 = row[fi];\n      const g10 = row[ci];\n      if (this.isValid(g00) && this.isValid(g10) && (row = this.grid[cj])) {\n        const g01 = row[fi];\n        const g11 = row[ci];\n        if (this.isValid(g01) && this.isValid(g11)) {\n          return [g00, g10, g01, g11];\n        }\n      }\n    }\n    return null;\n  }\n  valueAtIndexes(i, j) {\n    return this.grid[j][i];\n  }\n  lonLatAtIndexes(i, j) {\n    let lon = this.longitudeAtX(i);\n    let lat = this.latitudeAtY(j);\n    return [lon, lat];\n  }\n  longitudeAtX(i) {\n    let halfXPixel = this.deltaX / 2;\n    let lon = this.xmin + halfXPixel + i * this.deltaX;\n    if (this.translateX) {\n      lon = lon > 180 ? lon - 360 : lon;\n    }\n    return lon;\n  }\n  latitudeAtY(j) {\n    let halfYPixel = this.deltaY / 2;\n    return this.ymax - halfYPixel - j * this.deltaY;\n  }\n  randomize(o = {}, width, height, unproject) {\n    let i = Math.random() * (width || this.cols) | 0;\n    let j = Math.random() * (height || this.rows) | 0;\n    const coords = unproject([i, j]);\n    if (coords !== null) {\n      o.x = coords[0];\n      o.y = coords[1];\n    } else {\n      o.x = this.longitudeAtX(i);\n      o.y = this.latitudeAtY(j);\n    }\n    return o;\n  }\n  checkFields() {\n    return this.isFields;\n  }\n}\n\nconst defaultOptions = {\n  globalAlpha: 0.9,\n  lineWidth: 1,\n  colorScale: \"#fff\",\n  velocityScale: 1 / 25,\n  maxAge: 90,\n  paths: 800,\n  frameRate: 20,\n  useCoordsDraw: true,\n  gpet: true\n};\nfunction indexFor(m, min, max, colorScale) {\n  return Math.max(\n    0,\n    Math.min(\n      colorScale.length - 1,\n      Math.round((m - min) / (max - min) * (colorScale.length - 1))\n    )\n  );\n}\nclass WindCore {\n  constructor(ctx, options, field) {\n    this.particles = [];\n    this.generated = false;\n    this.ctx = ctx;\n    if (!this.ctx) {\n      throw new Error(\"ctx error\");\n    }\n    this.animate = this.animate.bind(this);\n    this.setOptions(options);\n    if (field) {\n      this.updateData(field);\n    }\n  }\n  setOptions(options) {\n    this.options = { ...defaultOptions, ...options };\n    const { width, height } = this.ctx.canvas;\n    if (\"particleAge\" in options && !(\"maxAge\" in options) && isNumber(this.options.particleAge)) {\n      this.options.maxAge = this.options.particleAge;\n    }\n    if (\"particleMultiplier\" in options && !(\"paths\" in options) && isNumber(this.options.particleMultiplier)) {\n      this.options.paths = Math.round(\n        width * height * this.options.particleMultiplier\n      );\n    }\n    this.prerender();\n  }\n  getOptions() {\n    return this.options;\n  }\n  updateData(field) {\n    this.field = field;\n    if (!this.generated) {\n      return;\n    }\n    this.particles = this.prepareParticlePaths();\n  }\n  project(...args) {\n    throw new Error(\"project must be overriden\");\n  }\n  unproject(...args) {\n    throw new Error(\"unproject must be overriden\");\n  }\n  intersectsCoordinate(coordinates) {\n    throw new Error(\"must be overriden\");\n  }\n  clearCanvas() {\n    this.stop();\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.forceStop = false;\n  }\n  start() {\n    this.starting = true;\n    this.forceStop = false;\n    this.then = Date.now();\n    this.animate();\n  }\n  stop() {\n    cancelAnimationFrame(this.animationLoop);\n    this.starting = false;\n    this.forceStop = true;\n  }\n  animate() {\n    if (this.animationLoop) {\n      cancelAnimationFrame(this.animationLoop);\n    }\n    this.animationLoop = requestAnimationFrame(this.animate);\n    const now = Date.now();\n    const delta = now - this.then;\n    if (delta > this.options.frameRate) {\n      this.then = now - delta % this.options.frameRate;\n      this.render();\n    }\n  }\n  prerender() {\n    this.generated = false;\n    if (!this.field) {\n      return;\n    }\n    this.particles = this.prepareParticlePaths();\n    this.generated = true;\n    if (!this.starting && !this.forceStop) {\n      this.starting = true;\n      this.then = Date.now();\n      this.animate();\n    }\n  }\n  render() {\n    this.moveParticles();\n    this.drawParticles();\n    this.postrender();\n  }\n  postrender() {\n  }\n  moveParticles() {\n    const { width, height } = this.ctx.canvas;\n    const particles = this.particles;\n    const maxAge = this.options.maxAge;\n    const velocityScale = isFunction(this.options.velocityScale) ? this.options.velocityScale() : this.options.velocityScale;\n    let i = 0;\n    const len = particles.length;\n    for (; i < len; i++) {\n      const particle = particles[i];\n      if (particle.age > maxAge) {\n        particle.age = 0;\n        this.field.randomize(particle, width, height, this.unproject);\n      }\n      const x = particle.x;\n      const y = particle.y;\n      const vector = this.field.interpolatedValueAt(x, y);\n      if (vector === null) {\n        particle.age = maxAge;\n      } else {\n        const xt = x + vector.u * velocityScale;\n        const yt = y + vector.v * velocityScale;\n        if (this.field.hasValueAt(xt, yt)) {\n          particle.xt = xt;\n          particle.yt = yt;\n          particle.m = vector.m;\n        } else {\n          particle.x = xt;\n          particle.y = yt;\n          particle.age = maxAge;\n        }\n      }\n      particle.age++;\n    }\n  }\n  fadeIn() {\n    const prev = this.ctx.globalCompositeOperation;\n    this.ctx.globalCompositeOperation = \"destination-in\";\n    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.globalCompositeOperation = prev;\n  }\n  drawParticles() {\n    const particles = this.particles;\n    this.fadeIn();\n    this.ctx.globalAlpha = this.options.globalAlpha;\n    this.ctx.fillStyle = `rgba(0, 0, 0, ${this.options.globalAlpha})`;\n    this.ctx.lineWidth = isNumber(this.options.lineWidth) ? this.options.lineWidth : 1;\n    this.ctx.strokeStyle = isString(this.options.colorScale) ? this.options.colorScale : \"#fff\";\n    let i = 0;\n    const len = particles.length;\n    if (this.field && len > 0) {\n      let min;\n      let max;\n      if (isValide(this.options.minVelocity) && isValide(this.options.maxVelocity)) {\n        min = this.options.minVelocity;\n        max = this.options.maxVelocity;\n      } else {\n        [min, max] = this.field.range;\n      }\n      for (; i < len; i++) {\n        this[this.options.useCoordsDraw ? \"drawCoordsParticle\" : \"drawPixelParticle\"](particles[i], min, max);\n      }\n    }\n  }\n  drawPixelParticle(particle, min, max) {\n    const pointPrev = [particle.x, particle.y];\n    const pointNext = [particle.xt, particle.yt];\n    if (pointNext && pointPrev && isValide(pointNext[0]) && isValide(pointNext[1]) && isValide(pointPrev[0]) && isValide(pointPrev[1]) && particle.age <= this.options.maxAge) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(pointPrev[0], pointPrev[1]);\n      this.ctx.lineTo(pointNext[0], pointNext[1]);\n      if (isFunction(this.options.colorScale)) {\n        this.ctx.strokeStyle = this.options.colorScale(particle.m);\n      } else if (Array.isArray(this.options.colorScale)) {\n        const colorIdx = indexFor(\n          particle.m,\n          min,\n          max,\n          this.options.colorScale\n        );\n        this.ctx.strokeStyle = this.options.colorScale[colorIdx];\n      }\n      if (isFunction(this.options.lineWidth)) {\n        this.ctx.lineWidth = this.options.lineWidth(particle.m);\n      }\n      particle.x = particle.xt;\n      particle.y = particle.yt;\n      this.ctx.stroke();\n    }\n  }\n  drawCoordsParticle(particle, min, max) {\n    const source = [particle.x, particle.y];\n    const target = [particle.xt, particle.yt];\n    if (target && source && isValide(target[0]) && isValide(target[1]) && isValide(source[0]) && isValide(source[1]) && this.intersectsCoordinate(target) && particle.age <= this.options.maxAge) {\n      const pointPrev = this.project(source);\n      const pointNext = this.project(target);\n      if (pointPrev && pointNext) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(pointPrev[0], pointPrev[1]);\n        this.ctx.lineTo(pointNext[0], pointNext[1]);\n        particle.x = particle.xt;\n        particle.y = particle.yt;\n        if (isFunction(this.options.colorScale)) {\n          this.ctx.strokeStyle = this.options.colorScale(particle.m);\n        } else if (Array.isArray(this.options.colorScale)) {\n          const colorIdx = indexFor(\n            particle.m,\n            min,\n            max,\n            this.options.colorScale\n          );\n          this.ctx.strokeStyle = this.options.colorScale[colorIdx];\n        }\n        if (isFunction(this.options.lineWidth)) {\n          this.ctx.lineWidth = this.options.lineWidth(particle.m);\n        }\n        this.ctx.stroke();\n      }\n    }\n  }\n  prepareParticlePaths() {\n    const { width, height } = this.ctx.canvas;\n    const particleCount = typeof this.options.paths === \"function\" ? this.options.paths(this) : this.options.paths;\n    const particles = [];\n    if (!this.field) {\n      return [];\n    }\n    let i = 0;\n    for (; i < particleCount; i++) {\n      particles.push(\n        this.field.randomize(\n          {\n            age: this.randomize()\n          },\n          width,\n          height,\n          this.unproject\n        )\n      );\n    }\n    return particles;\n  }\n  randomize() {\n    return Math.floor(Math.random() * this.options.maxAge);\n  }\n}\nWindCore.Field = Field;\n\nexport { Field, TypeOf, Vector, WindCore, assign, createCanvas, defaultOptions, floorMod, formatData, getColor, isArray, isArrayBuffer, isDate, isEmpty, isFunction, isNull, isNumber, isObject, isString, isValide, removeDomNode, warnLog, warnOnce };\n//# sourceMappingURL=wind-core.esm.js.map\n","/**\n * @desc mapbox dom 图层\n * @tip: 为什么实现这个图层，本身mapbox-gl支持 canvas source，但是经过测试添加此图层性能会急剧下降\n */\nimport * as mapboxgl from 'mapbox-gl';\n\n/**\n * 移除 dom\n * @param node\n * @returns {removeDomNode}\n */\nfunction removeDomNode(node: HTMLElement | HTMLCanvasElement) {\n  if (!node) {\n    return null;\n  }\n  if (node.parentNode) {\n    node.parentNode.removeChild(node);\n  }\n  return node;\n}\n\nexport default class Overlay {\n  map: mapboxgl.Map;\n  public options: any;\n  protected canvas: HTMLCanvasElement | null;\n  private canvas2: HTMLCanvasElement | null;\n  private devicePixelRatio: number;\n  public type: string;\n  public renderingMode: string;\n  public id: string | number;\n\n  constructor(id: string | number, options = {}) {\n    if (!id) {\n      throw Error('layer id must be specified');\n    }\n\n    this.id = id;\n    this.options = options;\n    this.canvas = null;\n    this.canvas2 = null;\n\n    this.devicePixelRatio = this.options.devicePixelRatio ||\n      // @ts-ignore\n      (window.devicePixelRatio || (window.screen.deviceXDPI / window.screen.logicalXDPI)) as number;\n\n    this.render = this.render.bind(this);\n\n    this.type = 'custom';\n    this.renderingMode = '2d';\n  }\n\n  onAdd(map: mapboxgl.Map) {\n    this.setMap(map);\n    this.canvas = this.initialize();\n    if (this.options.doubleBuffer) {\n      this.canvas2 = this.initialize();\n    }\n  }\n\n  resizeCanvas(canvas: HTMLCanvasElement) {\n    const mapboxCanvas = this.map.getCanvas();\n\n    // @ts-ignore\n    const { width, height } = this.map.transform;\n\n    const pixel = this.devicePixelRatio;\n\n    canvas.width = width * pixel;\n    canvas.height = height * pixel;\n    canvas.style.width = mapboxCanvas.style.width;\n    canvas.style.height = mapboxCanvas.style.height;\n  }\n\n  initialize() {\n    const canvasContainer = this.map.getCanvasContainer();\n    const mapboxCanvas = this.map.getCanvas();\n    const canvasOverlay = document.createElement('canvas');\n\n    // @ts-ignore\n    const { width, height } = this.map.transform;\n\n    const pixel = this.devicePixelRatio;\n\n    canvasOverlay.width = width * pixel;\n    canvasOverlay.height = height * pixel;\n\n    canvasOverlay.style.position = 'absolute';\n    canvasOverlay.className = 'mapbox-overlay-canvas';\n    canvasOverlay.style.width = mapboxCanvas.style.width;\n    canvasOverlay.style.height = mapboxCanvas.style.height;\n    canvasContainer.appendChild(canvasOverlay);\n\n    return canvasOverlay;\n  }\n\n  render() {}\n\n  project(coordinates: [number, number]) {\n    if (this.map !== undefined) {\n      const lnglat = this.map.project(new mapboxgl.LngLat(coordinates[0], coordinates[1]));\n      const x = lnglat.x;\n      const y = lnglat.y;\n      return [\n        x * this.devicePixelRatio,\n        y * this.devicePixelRatio,\n      ];\n    }\n    return coordinates;\n  }\n\n  unproject(pixel: [number, number]) {\n    if (this.map !== undefined) {\n      const lnglat: mapboxgl.LngLat = this.map.unproject(new mapboxgl.Point(pixel[0], pixel[1]));\n      return [lnglat.lng, lnglat.lat];\n    }\n    return pixel;\n  }\n\n  intersectsCoordinate(coordinate: [number, number]): boolean {\n    const bounds = this.map.getBounds();\n    // @ts-ignore\n    const latRange: [number, number] = this.map?.transform?.latRange;\n    if (latRange) {\n      if (coordinate[1] > latRange[1] || coordinate[1] < latRange[0]) return false;\n    }\n    return bounds.contains(new mapboxgl.LngLat(coordinate[0], coordinate[1])) as boolean;\n    // return true;\n  }\n\n  clear() {\n    if (this.canvas) {\n      const ctx = this.canvas.getContext('2d');\n      ctx && ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    if (this.canvas2) {\n      const ctx = this.canvas2.getContext('2d');\n      ctx && ctx.clearRect(0, 0, this.canvas2.width, this.canvas2.height);\n    }\n  }\n\n  setMap(map: mapboxgl.Map) {\n    this.map = map;\n    return this;\n  }\n\n  getMap() {\n    return this.map;\n  }\n\n  addTo(map: mapboxgl.Map) {\n    this.onAdd(map);\n  }\n\n  remove() {\n    if (this.canvas) {\n      removeDomNode(this.canvas);\n      this.canvas = null;\n    }\n\n    if (this.canvas2) {\n      removeDomNode(this.canvas2);\n      this.canvas2 = null;\n    }\n  }\n}\n","var WorkerClass = null;\n\ntry {\n    var WorkerThreads =\n        typeof module !== 'undefined' && typeof module.require === 'function' && module.require('worker_threads') ||\n        typeof __non_webpack_require__ === 'function' && __non_webpack_require__('worker_threads') ||\n        typeof require === 'function' && require('worker_threads');\n    WorkerClass = WorkerThreads.Worker;\n} catch(e) {} // eslint-disable-line\n\nfunction decodeBase64$1(base64, enableUnicode) {\n    return Buffer.from(base64, 'base64').toString(enableUnicode ? 'utf16' : 'utf8');\n}\n\nfunction createBase64WorkerFactory$2(base64, sourcemapArg, enableUnicodeArg) {\n    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;\n    var enableUnicode = enableUnicodeArg === undefined ? false : enableUnicodeArg;\n    var source = decodeBase64$1(base64, enableUnicode);\n    var start = source.indexOf('\\n', 10) + 1;\n    var body = source.substring(start) + (sourcemap ? '\\/\\/# sourceMappingURL=' + sourcemap : '');\n    return function WorkerFactory(options) {\n        return new WorkerClass(body, Object.assign({}, options, { eval: true }));\n    };\n}\n\nfunction decodeBase64(base64, enableUnicode) {\n    var binaryString = atob(base64);\n    if (enableUnicode) {\n        var binaryView = new Uint8Array(binaryString.length);\n        for (var i = 0, n = binaryString.length; i < n; ++i) {\n            binaryView[i] = binaryString.charCodeAt(i);\n        }\n        return String.fromCharCode.apply(null, new Uint16Array(binaryView.buffer));\n    }\n    return binaryString;\n}\n\nfunction createURL(base64, sourcemapArg, enableUnicodeArg) {\n    var sourcemap = sourcemapArg === undefined ? null : sourcemapArg;\n    var enableUnicode = enableUnicodeArg === undefined ? false : enableUnicodeArg;\n    var source = decodeBase64(base64, enableUnicode);\n    var start = source.indexOf('\\n', 10) + 1;\n    var body = source.substring(start) + (sourcemap ? '\\/\\/# sourceMappingURL=' + sourcemap : '');\n    var blob = new Blob([body], { type: 'application/javascript' });\n    return URL.createObjectURL(blob);\n}\n\nfunction createBase64WorkerFactory$1(base64, sourcemapArg, enableUnicodeArg) {\n    var url;\n    return function WorkerFactory(options) {\n        url = url || createURL(base64, sourcemapArg, enableUnicodeArg);\n        return new Worker(url, options);\n    };\n}\n\nvar kIsNodeJS = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n\nfunction isNodeJS() {\n    return kIsNodeJS;\n}\n\nfunction createBase64WorkerFactory(base64, sourcemapArg, enableUnicodeArg) {\n    if (isNodeJS()) {\n        return createBase64WorkerFactory$2(base64, sourcemapArg, enableUnicodeArg);\n    }\n    return createBase64WorkerFactory$1(base64, sourcemapArg, enableUnicodeArg);\n}\n\nvar WorkerFactory = createBase64WorkerFactory('Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwooZnVuY3Rpb24gKCkgewogICd1c2Ugc3RyaWN0JzsKCiAgZnVuY3Rpb24gY2FsY01pbk1heChhcnJheSkgewogICAgbGV0IG1pbiA9IEluZmluaXR5OwogICAgbGV0IG1heCA9IEluZmluaXR5OwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykgewogICAgICBjb25zdCB2YWwgPSBhcnJheVtpXTsKICAgICAgaWYgKG1pbiA9PT0gSW5maW5pdHkpIHsKICAgICAgICBtaW4gPSB2YWw7CiAgICAgIH0gZWxzZSBpZiAobWF4ID09PSBJbmZpbml0eSkgewogICAgICAgIG1heCA9IHZhbDsKICAgICAgICBtaW4gPSBNYXRoLm1pbihtaW4sIG1heCk7CiAgICAgICAgbWF4ID0gTWF0aC5tYXgobWluLCBtYXgpOwogICAgICB9IGVsc2UgewogICAgICAgIG1pbiA9IE1hdGgubWluKHZhbCwgbWluKTsKICAgICAgICBtYXggPSBNYXRoLm1heCh2YWwsIG1heCk7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiBbbWluLCBtYXhdOwogIH0KCiAgY29uc3QgY3R4ID0gc2VsZjsKICBjdHguYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGFzeW5jICh7IGRhdGE6IHBheWxvYWQgfSkgPT4gewogICAgY29uc3QgcmVuZGVyRm9ybSA9IHBheWxvYWRbMF07CiAgICBpZiAocmVuZGVyRm9ybSA9PT0gInJnIikgewogICAgICBjb25zdCB1RGF0YSA9IHBheWxvYWRbMV07CiAgICAgIGNvbnN0IHZEYXRhID0gcGF5bG9hZFsyXTsKICAgICAgY29uc3QgW3VNaW4sIHVNYXhdID0gY2FsY01pbk1heCh1RGF0YSk7CiAgICAgIGNvbnN0IFt2TWluLCB2TWF4XSA9IGNhbGNNaW5NYXgodkRhdGEpOwogICAgICBjb25zdCB2ZWxvY2l0eURhdGEgPSBuZXcgVWludDhBcnJheSh1RGF0YS5sZW5ndGggKiA0KTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1RGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IHIgPSAyNTUgKiAodURhdGFbaV0gLSB1TWluKSAvICh1TWF4IC0gdU1pbik7CiAgICAgICAgY29uc3QgZyA9IDI1NSAqICh2RGF0YVtpXSAtIHZNaW4pIC8gKHZNYXggLSB2TWluKTsKICAgICAgICB2ZWxvY2l0eURhdGEuc2V0KFtyLCBnLCAwLCAyNTVdLCBpICogNCk7CiAgICAgIH0KICAgICAgY3R4LnBvc3RNZXNzYWdlKFt2ZWxvY2l0eURhdGEuYnVmZmVyLCB1TWluLCB1TWF4LCB2TWluLCB2TWF4XSwgW3ZlbG9jaXR5RGF0YS5idWZmZXJdKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnN0IHNpbmdsZURhdGEgPSBwYXlsb2FkWzFdOwogICAgICBjb25zdCBbbWluLCBtYXhdID0gY2FsY01pbk1heChzaW5nbGVEYXRhKTsKICAgICAgY29uc3QgdmVsb2NpdHlEYXRhID0gbmV3IFVpbnQ4QXJyYXkoc2luZ2xlRGF0YS5sZW5ndGggKiA0KTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaW5nbGVEYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29uc3QgciA9IDI1NSAqIChzaW5nbGVEYXRhW2ldIC0gbWluKSAvIChtYXggLSBtaW4pOwogICAgICAgIHZlbG9jaXR5RGF0YS5zZXQoW3IsIDAsIDAsIDI1NV0sIGkgKiA0KTsKICAgICAgfQogICAgICBjdHgucG9zdE1lc3NhZ2UoW3ZlbG9jaXR5RGF0YS5idWZmZXIsIG1pbiwgbWF4XSwgW3ZlbG9jaXR5RGF0YS5idWZmZXJdKTsKICAgIH0KICB9KTsKCn0pKCk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPURhdGFQcm9jZXNzZS5qcy5tYXAKCg==', 'data:application/json;charset=utf-8;base64,', false);\n/* eslint-enable */\n\nfunction calcMinMax(array) {\n  let min = Infinity;\n  let max = Infinity;\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i];\n    if (min === Infinity) {\n      min = val;\n    } else if (max === Infinity) {\n      max = val;\n      min = Math.min(min, max);\n      max = Math.max(min, max);\n    } else {\n      min = Math.min(val, min);\n      max = Math.max(val, max);\n    }\n  }\n  return [min, max];\n}\nfunction isNumber(val) {\n  return typeof val === \"number\" && !isNaN(val);\n}\nfunction isValide(val) {\n  return val !== void 0 && val !== null && !isNaN(val);\n}\nfunction findStopLessThanOrEqualTo(stops, input) {\n  const lastIndex = stops.length - 1;\n  let lowerIndex = 0;\n  let upperIndex = lastIndex;\n  let currentIndex = 0;\n  let currentValue;\n  let nextValue;\n  while (lowerIndex <= upperIndex) {\n    currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n    currentValue = stops[currentIndex];\n    nextValue = stops[currentIndex + 1];\n    if (currentValue <= input) {\n      if (currentIndex === lastIndex || input < nextValue) {\n        return currentIndex;\n      }\n      lowerIndex = currentIndex + 1;\n    } else if (currentValue > input) {\n      upperIndex = currentIndex - 1;\n    } else {\n      throw new Error(\"Input is not a number.\");\n    }\n  }\n  return 0;\n}\nfunction fp64LowPart(x) {\n  return x - Math.fround(x);\n}\nfunction mat4Invert(out, a) {\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[4];\n  const a11 = a[5];\n  const a12 = a[6];\n  const a13 = a[7];\n  const a20 = a[8];\n  const a21 = a[9];\n  const a22 = a[10];\n  const a23 = a[11];\n  const a30 = a[12];\n  const a31 = a[13];\n  const a32 = a[14];\n  const a33 = a[15];\n  const b00 = a00 * a11 - a01 * a10;\n  const b01 = a00 * a12 - a02 * a10;\n  const b02 = a00 * a13 - a03 * a10;\n  const b03 = a01 * a12 - a02 * a11;\n  const b04 = a01 * a13 - a03 * a11;\n  const b05 = a02 * a13 - a03 * a12;\n  const b06 = a20 * a31 - a21 * a30;\n  const b07 = a20 * a32 - a22 * a30;\n  const b08 = a20 * a33 - a23 * a30;\n  const b09 = a21 * a32 - a22 * a31;\n  const b10 = a21 * a33 - a23 * a31;\n  const b11 = a22 * a33 - a23 * a32;\n  let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n  if (!det) {\n    return null;\n  }\n  det = 1 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\nfunction transformMat4(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\nfunction getEye(matrix) {\n  const defaultMat4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  let eye = transformMat4(\n    [],\n    [0, 0, 0, 1],\n    mat4Invert(defaultMat4, matrix)\n  );\n  const clipW = 1 / eye[3];\n  eye = eye.map((item) => item / eye[3]);\n  eye[3] = clipW;\n  return eye;\n}\n\nfunction getDevicePixelRatio() {\n  return devicePixelRatio || 1;\n}\nfunction resizeCanvasSize(canvas, pixelRatio) {\n  if (!canvas) {\n    return false;\n  }\n  pixelRatio = pixelRatio || getDevicePixelRatio();\n  if (canvas instanceof HTMLCanvasElement) {\n    const width = canvas.clientWidth * pixelRatio;\n    const height = canvas.clientHeight * pixelRatio;\n    if (width <= 0 || height <= 0) {\n      return false;\n    } else if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width;\n      canvas.height = height;\n      return true;\n    }\n  }\n  return false;\n}\nfunction getGlContext(canvas, glOptions = {}) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  function onContextCreationError(error) {\n    console.error(error.statusMessage);\n  }\n  canvas.addEventListener(\n    \"webglcontextcreationerror\",\n    onContextCreationError,\n    false\n  );\n  for (let ii = 0; ii < names.length; ++ii) {\n    try {\n      context = canvas.getContext(\n        names[ii],\n        glOptions\n      );\n    } catch (e) {\n    }\n    if (context) {\n      break;\n    }\n  }\n  canvas.removeEventListener(\n    \"webglcontextcreationerror\",\n    onContextCreationError,\n    false\n  );\n  if (!context || !context.getExtension(\"OES_texture_float\")) {\n    return null;\n  }\n  return context;\n}\nfunction defineShader(shader, defines) {\n  return Object.keys(defines).reduce((str, key) => {\n    return defines[key] ? str + `#define ${key} ${defines[key]}\n` : \"\";\n  }, \"\");\n}\nfunction injectShaderModule(shader, modules = {}) {\n  Object.keys(modules).map((key) => {\n    if (modules[key]) {\n      shader = shader.replace(new RegExp(key, \"g\"), `${modules[key]} \n`);\n    }\n  });\n  return shader;\n}\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const log = gl.getShaderInfoLog(shader) || \"\";\n    gl.deleteShader(shader);\n    throw new Error(log);\n  }\n  return shader;\n}\nfunction createProgram(gl, vertexShaderSource, fragmentShaderSource) {\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n  const fragmentShader = createShader(\n    gl,\n    gl.FRAGMENT_SHADER,\n    fragmentShaderSource\n  );\n  const program = gl.createProgram();\n  if (program !== null) {\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program) || \"\");\n    }\n  }\n  return program;\n}\nfunction createTexture(gl, filter, data, width, height) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      data\n    );\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\nfunction resizeTexture(gl, texture, width, height, data) {\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      data\n    );\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n}\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\nfunction destroyTexture(gl, texture) {\n  gl.deleteTexture(texture);\n}\nfunction createBuffer(gl, data) {\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  if (data) {\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  }\n  return buffer;\n}\nfunction updateBufferData(gl, buffer, data) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  if (data) {\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  }\n  return buffer;\n}\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n  }\n}\nfunction resizeFramebuffer(gl, framebuffer, width, height, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n  }\n}\nfunction clearScene(gl, color, depth = 1, stencil = 0, fbo) {\n  const [r, g, b, a] = color;\n  let clearFlags = 0;\n  gl.clearColor(r, g, b, a);\n  clearFlags |= gl.COLOR_BUFFER_BIT;\n  if (depth !== void 0) {\n    gl.clearDepth(depth);\n    clearFlags |= gl.DEPTH_BUFFER_BIT;\n  }\n  if (stencil !== void 0) {\n    gl.clearStencil(stencil | 0);\n    clearFlags |= gl.STENCIL_BUFFER_BIT;\n  }\n  gl.clear(clearFlags);\n}\nfunction loadImage(src) {\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(new Event(\"url is null\"));\n    }\n    const image = new Image();\n    image.crossOrigin = \"anonymous\";\n    image.onload = () => resolve(image);\n    image.onerror = reject;\n    image.src = src;\n    if (image.complete) {\n      resolve(image);\n    }\n  });\n}\nfunction getPlaneBuffer(startX, endX, startY, endY, widthSegments, heightSegments) {\n  const width = endX - startX;\n  const height = endY - startY;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n  const gridX = Math.floor(widthSegments);\n  const gridY = Math.floor(heightSegments);\n  const gridX1 = gridX + 1;\n  const gridY1 = gridY + 1;\n  const segmentWidth = width / gridX;\n  const segmentHeight = height / gridY;\n  const indices = [];\n  const wireframeIndexes = [];\n  const vertices = [];\n  const verticesLow = [];\n  const uvs = [];\n  for (let iy = 0; iy < gridY1; iy++) {\n    const y = iy * segmentHeight;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const x = ix * segmentWidth;\n      const vx = startX + x / widthHalf / 2 * width;\n      const vy = startY + y / heightHalf / 2 * height;\n      vertices.push(vx, vy, 0);\n      verticesLow.push(fp64LowPart(vx), fp64LowPart(vy), 0);\n      uvs.push(ix / gridX, iy / gridY);\n    }\n  }\n  for (let iy = 0; iy < gridY; iy++) {\n    for (let ix = 0; ix < gridX; ix++) {\n      const a = ix + gridX1 * iy;\n      const b = ix + gridX1 * (iy + 1);\n      const c = ix + 1 + gridX1 * (iy + 1);\n      const d = ix + 1 + gridX1 * iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  for (let i = 0, l = indices.length; i < l; i += 3) {\n    const a = indices[i];\n    const b = indices[i + 1];\n    const c = indices[i + 2];\n    wireframeIndexes.push(a, b, b, c, c, a);\n  }\n  return {\n    uvs: {\n      data: uvs,\n      size: 2\n    },\n    elements: {\n      data: indices,\n      count: indices.length\n    },\n    wireframeElements: {\n      data: wireframeIndexes,\n      count: wireframeIndexes.length\n    },\n    position: {\n      data: vertices,\n      size: 3\n    },\n    positionLow: {\n      data: verticesLow,\n      size: 3\n    }\n  };\n}\n\nclass Base {\n  constructor(gl, vShader, fShader, modules) {\n    this.vertShader = \"\";\n    this.fragShader = \"\";\n    if (vShader) {\n      this.vertShader = vShader;\n    }\n    if (fShader) {\n      this.fragShader = fShader;\n    }\n    this.program = createProgram(\n      gl,\n      injectShaderModule(this.vertShader, modules),\n      this.fragShader\n    );\n    this.gl = gl;\n    this.textureUnit = 0;\n    this.uniformSetters = this.createUniformSetters();\n    this.attribSetters = this.createAttributeSetters();\n    this.transfromStack = [];\n  }\n  active() {\n    this.gl.useProgram(this.program);\n    return this;\n  }\n  deactive() {\n    this.gl.deleteProgram(this.program);\n    return this;\n  }\n  getBindPointForSamplerType(gl, type) {\n    if (type === gl.SAMPLER_2D) {\n      return gl.TEXTURE_2D;\n    }\n    if (type === gl.SAMPLER_CUBE) {\n      return gl.TEXTURE_CUBE_MAP;\n    }\n    return void 0;\n  }\n  createUniformSetter(program, uniformInfo) {\n    const { gl } = this;\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    const type = uniformInfo.type;\n    const isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    if (type === gl.FLOAT && isArray) {\n      return function(v) {\n        gl.uniform1fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT) {\n      return function(v) {\n        gl.uniform1f(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC2) {\n      return function(v) {\n        gl.uniform2fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC3) {\n      return function(v) {\n        gl.uniform3fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC4) {\n      return function(v) {\n        gl.uniform4fv(location, v);\n      };\n    }\n    if (type === gl.INT && isArray) {\n      return function(v) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.INT) {\n      return function(v) {\n        gl.uniform1i(location, v);\n      };\n    }\n    if (type === gl.INT_VEC2) {\n      return function(v) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC3) {\n      return function(v) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC4) {\n      return function(v) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.BOOL) {\n      return function(v) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC2) {\n      return function(v) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC3) {\n      return function(v) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC4) {\n      return function(v) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT2) {\n      return function(v) {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT3) {\n      return function(v) {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT4) {\n      return function(v) {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    if ((type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) && isArray) {\n      const units = [];\n      for (let ii = 0; ii < uniformInfo.size; ++ii) {\n        units.push(this.textureUnit++);\n      }\n      return function(bindPoint, units2) {\n        return function(textures) {\n          gl.uniform1iv(location, units2);\n          textures.forEach(function(texture, index) {\n            gl.activeTexture(gl.TEXTURE0 + units2[index]);\n            if (bindPoint !== void 0) {\n              gl.bindTexture(bindPoint, texture);\n            }\n          });\n        };\n      }(this.getBindPointForSamplerType(gl, type), units);\n    }\n    if (type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) {\n      return function(bindPoint, unit) {\n        return function(texture) {\n          gl.uniform1i(location, unit);\n          gl.activeTexture(gl.TEXTURE0 + unit);\n          if (bindPoint !== void 0) {\n            gl.bindTexture(bindPoint, texture);\n          }\n        };\n      }(this.getBindPointForSamplerType(gl, type), this.textureUnit++);\n    }\n    throw new Error(\"unknown type: 0x\" + type.toString(16));\n  }\n  createUniformSetters() {\n    const { gl } = this;\n    this.textureUnit = 0;\n    const uniformSetters = {};\n    if (this.program !== null) {\n      const numUniforms = gl.getProgramParameter(\n        this.program,\n        gl.ACTIVE_UNIFORMS\n      );\n      for (let ii = 0; ii < numUniforms; ++ii) {\n        const uniformInfo = gl.getActiveUniform(\n          this.program,\n          ii\n        );\n        if (!uniformInfo) {\n          break;\n        }\n        let name = uniformInfo.name;\n        if (name.substr(-3) === \"[0]\") {\n          name = name.substr(0, name.length - 3);\n        }\n        const setter = this.createUniformSetter(this.program, uniformInfo);\n        uniformSetters[name] = setter;\n      }\n    }\n    return uniformSetters;\n  }\n  createAttribSetter(index) {\n    const { gl } = this;\n    return function(b) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      if (b.numComponents !== void 0 || b.size !== void 0) {\n        gl.vertexAttribPointer(\n          index,\n          b.numComponents || b.size,\n          b.type || gl.FLOAT,\n          b.normalize || false,\n          b.stride || 0,\n          b.offset || 0\n        );\n      }\n    };\n  }\n  createAttributeSetters() {\n    const { gl } = this;\n    const attribSetters = {};\n    if (this.program !== null) {\n      const numAttribs = gl.getProgramParameter(\n        this.program,\n        gl.ACTIVE_ATTRIBUTES\n      );\n      for (let ii = 0; ii < numAttribs; ++ii) {\n        const attribInfo = gl.getActiveAttrib(\n          this.program,\n          ii\n        );\n        if (!attribInfo) {\n          break;\n        }\n        const index = gl.getAttribLocation(this.program, attribInfo.name);\n        attribSetters[attribInfo.name] = this.createAttribSetter(index);\n      }\n    }\n    return attribSetters;\n  }\n  setAttributes(attribs, setters) {\n    if (setters) {\n      setters = setters.attribSetters || setters;\n    } else {\n      setters = this.attribSetters;\n    }\n    Object.keys(attribs).forEach(function(name) {\n      const setter = setters[name];\n      if (setter) {\n        setter(attribs[name]);\n      }\n    });\n    return this;\n  }\n  setUniforms(values, setters) {\n    if (setters) {\n      setters = setters.uniformSetters || setters;\n    } else {\n      setters = this.uniformSetters;\n    }\n    Object.keys(values).forEach(function(name) {\n      const setter = setters[name];\n      if (setter) {\n        setter(values[name]);\n      }\n    });\n    return this;\n  }\n  elements(element) {\n    if (!this.elementsBuffer) {\n      this.elementsBuffer = this.gl.createBuffer();\n    }\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.elementsBuffer);\n    if (element.data) {\n      this.gl.bufferData(\n        this.gl.ELEMENT_ARRAY_BUFFER,\n        element.data,\n        element.usage || this.gl.STATIC_DRAW\n      );\n    }\n    if (element.count !== void 0) {\n      this.runTimes(element.count);\n    }\n    if (element.primitive) {\n      this.setPrimitive(element.primitive);\n    }\n    return this;\n  }\n  clear(color) {\n    clearScene(this.gl, color);\n    this.transfromStack = [];\n    return this;\n  }\n  runTimes(count) {\n    this.count = count || 0;\n    return this;\n  }\n  setPrimitive(primitive) {\n    this.primitive = primitive || this.gl.TRIANGLES;\n    return this;\n  }\n  resize(width, height) {\n    if (width === void 0 || height === void 0) {\n      resizeCanvasSize(this.gl.canvas);\n      this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n    } else {\n      this.gl.viewport(0, 0, width, height);\n    }\n    return this;\n  }\n  draw() {\n    throw new Error(\"should override\");\n  }\n  translate() {\n    throw new Error(\"should override\");\n  }\n  rotate() {\n    throw new Error(\"should override\");\n  }\n  scale() {\n    throw new Error(\"should override\");\n  }\n  destroyed() {\n    throw new Error(\"should override\");\n  }\n}\n\nvar FillFrag$1 = \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D u_image;uniform sampler2D u_color_ramp;uniform vec2 u_image_res;uniform vec2 u_range;uniform vec2 u_color_range;uniform vec2 u_display_range;uniform float u_opacity;varying vec2 v_tex_pos;float calcTexture(const vec2 uv){return texture2D(u_image,uv).r;}float bilinear(const vec2 uv){vec2 px=1.0/u_image_res;vec2 vc=(floor(uv*u_image_res))*px;vec2 f=fract(uv*u_image_res);float tl=calcTexture(vc);float tr=calcTexture(vc+vec2(px.x,0));float bl=calcTexture(vc+vec2(0,px.y));float br=calcTexture(vc+px);return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}float getValue(const vec2 uv){float min=u_range.x;float max=u_range.y;float r=bilinear(uv);return r*(max-min)+min;}const float PI=3.14159265359;vec2 mercatorToWGS84(vec2 xy){float y=radians(180.0-xy.y*360.0);y=360.0/PI*atan(exp(y))-90.0;y=y/-180.0+0.5;return vec2(xy.x,y);}void main(){vec2 globalWGS84=mercatorToWGS84(v_tex_pos);float value=getValue(globalWGS84);float value_t=(value-u_color_range.x)/(u_color_range.y-u_color_range.x);vec2 ramp_pos=vec2(fract(16.0*value_t),floor(16.0*value_t)/16.0);vec4 color=texture2D(u_color_ramp,ramp_pos);bool display=value<u_display_range.y&&value>u_display_range.x;if(display){gl_FragColor=vec4(floor(255.0*color*u_opacity)/255.0);}else{gl_FragColor=vec4(0.0,0.0,0.0,0.0);}}\"; // eslint-disable-line\n\nvar FillVert$1 = \"#define GLSLIFY 1\\nattribute vec3 instancePositions;attribute vec3 instancePositions64Low;attribute vec2 a_texCoord;uniform mat4 u_matrix;uniform vec4 u_cameraEye;uniform vec4 u_cameraEye64Low;uniform float u_offset;uniform sampler2D u_image;uniform vec2 u_image_res;uniform vec2 u_range;uniform vec2 u_mapping_range;varying vec2 v_tex_pos;varying float v_value;float calcTexture(const vec2 uv){return texture2D(u_image,uv).r;}float bilinear(const vec2 uv){vec2 px=1.0/u_image_res;vec2 vc=(floor(uv*u_image_res))*px;vec2 f=fract(uv*u_image_res);float tl=calcTexture(vc);float tr=calcTexture(vc+vec2(px.x,0));float bl=calcTexture(vc+vec2(0,px.y));float br=calcTexture(vc+px);return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}float getValue(const vec2 uv){float min=u_mapping_range.x;float max=u_mapping_range.y;float r=bilinear(uv);return r*(max-min)+min;}const float PI=3.14159265359;vec2 mercatorToWGS84(vec2 xy){float y=radians(180.0-xy.y*360.0);y=360.0/PI*atan(exp(y))-90.0;y=y/-180.0+0.5;return vec2(xy.x,y);}\\n#modules-transformZ\\nvoid main(){v_tex_pos=a_texCoord;vec2 globalWGS84=mercatorToWGS84(v_tex_pos);float value=getValue(globalWGS84);float z=transformZ(value,instancePositions);vec4 pos=vec4(instancePositions-u_cameraEye.xyz,0.0);pos+=vec4(instancePositions64Low-u_cameraEye64Low.xyz,0.0);\\n#modules-project\\n}\"; // eslint-disable-line\n\nclass Fill extends Base {\n  constructor(gl, vShader, fShader, modules) {\n    super(gl, vShader || FillVert$1, fShader || FillFrag$1, modules || {});\n    this.vertShader = FillVert$1;\n    this.fragShader = FillFrag$1;\n  }\n  draw() {\n    if (this.checkExt !== void 0) {\n      const primitiveType = this.primitive || this.gl.TRIANGLES;\n      if (this.checkExt) {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_INT,\n          0\n        );\n      } else {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_SHORT,\n          0\n        );\n      }\n    } else {\n      this.checkExt = this.gl.getExtension(\"OES_element_index_uint\");\n    }\n    return this;\n  }\n  translate() {\n    return this;\n  }\n  rotate() {\n    return this;\n  }\n  scale() {\n    return this;\n  }\n}\n\nfunction parseColorStyle(styleAttrField) {\n  if (Array.isArray(styleAttrField) && styleAttrField.length > 3) {\n    const type = styleAttrField[0];\n    const action = styleAttrField[1];\n    const interpolateColor = [];\n    for (let i = 3; i < styleAttrField.length; i += 2) {\n      const val = styleAttrField[i];\n      const color = styleAttrField[i + 1];\n      interpolateColor.push({\n        key: val,\n        value: color\n      });\n    }\n    return {\n      operator: type,\n      interpolation: {\n        name: action[0],\n        base: action[1]\n      },\n      input: interpolateColor\n    };\n  } else {\n    console.warn(\"[wind-core]: style-parser style config invalid\");\n    return {};\n  }\n}\nfunction parseZoomStyle(styleAttrField) {\n  if (Array.isArray(styleAttrField) && styleAttrField.length > 3) {\n    const type = styleAttrField[0];\n    const action = styleAttrField[1];\n    const interpolateZoom = [];\n    for (let i = 3; i < styleAttrField.length; i += 2) {\n      const val = styleAttrField[i];\n      const color = styleAttrField[i + 1];\n      interpolateZoom.push({\n        key: val,\n        value: color\n      });\n    }\n    return {\n      operator: type,\n      interpolation: {\n        name: action[0],\n        base: action[1]\n      },\n      input: interpolateZoom\n    };\n  } else {\n    console.warn(\"[wind-core]: style-parser style config invalid\");\n    return {};\n  }\n}\nfunction createLinearGradient(range, styleAttrField) {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  canvas.width = 256;\n  canvas.height = 1;\n  const { input: interpolateColor } = parseColorStyle(styleAttrField);\n  if (ctx && interpolateColor && Array.isArray(interpolateColor)) {\n    const keys = interpolateColor.map((d) => parseFloat(d.key));\n    const colorRange = [Math.min(...keys), Math.max(...keys)];\n    const [min, max] = [range[0] || colorRange[0], range[1] || colorRange[1]];\n    const gradient = ctx.createLinearGradient(0, 0, 256, 0);\n    for (let i = 0; i < interpolateColor.length; i += 1) {\n      const key = interpolateColor[i].key;\n      const color = interpolateColor[i].value;\n      gradient.addColorStop((key - min) / (max - min), color);\n    }\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 256, 1);\n    return {\n      data: new Uint8Array(ctx.getImageData(0, 0, 256, 1).data),\n      colorRange\n    };\n  } else {\n    return {};\n  }\n}\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n  const difference = upperValue - lowerValue;\n  const progress = input - lowerValue;\n  if (difference === 0) {\n    return 0;\n  } else if (base === 1) {\n    return progress / difference;\n  } else {\n    return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n  }\n}\nfunction interpolationFactor(interpolation, input, lower, upper) {\n  let t = 0;\n  if (interpolation.name === \"exponential\") {\n    t = exponentialInterpolation(input, interpolation.base, lower, upper);\n  } else if (interpolation.name === \"linear\") {\n    t = exponentialInterpolation(input, 1, lower, upper);\n  } else if (interpolation.name === \"cubic-bezier\") {\n    console.warn(\"interpolationFactor\");\n  }\n  return t;\n}\nfunction interpolateNumber(a, b, t) {\n  return a * (1 - t) + b * t;\n}\nconst cachedStyle = {};\nfunction createZoom(uid, zoom, key, styles, clearCache) {\n  const ukey = `${uid}_${key}`;\n  const styleAttrField = styles[key];\n  if (isNumber(styleAttrField)) {\n    if (cachedStyle[ukey]) {\n      delete cachedStyle[ukey];\n    }\n    return styleAttrField;\n  }\n  if (styleAttrField && Array.isArray(styleAttrField) && (!cachedStyle[ukey] || clearCache)) {\n    cachedStyle[ukey] = parseZoomStyle(styleAttrField);\n  }\n  if (cachedStyle[ukey]) {\n    const { input: interpolateZoom, interpolation } = cachedStyle[ukey] || {};\n    if (interpolateZoom && Array.isArray(interpolateZoom)) {\n      const labels = interpolateZoom.map((i) => i.key);\n      const outputs = interpolateZoom.map((i) => i.value);\n      if (zoom <= labels[0]) {\n        return outputs[0];\n      }\n      const stopCount = labels.length;\n      if (zoom >= labels[stopCount - 1]) {\n        return outputs[stopCount - 1];\n      }\n      const index = findStopLessThanOrEqualTo(labels, zoom);\n      const idx = labels.length - 1;\n      const lower = labels[index];\n      const upper = labels[index >= idx ? idx : index + 1];\n      const t = interpolationFactor(interpolation, zoom, lower, upper);\n      const outputLower = outputs[index];\n      const outputUpper = outputs[index >= idx ? idx : index + 1];\n      return interpolateNumber(outputLower, outputUpper, t);\n    } else {\n      return 1;\n    }\n  }\n  return 1;\n}\n\nvar FillFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D u_wind;uniform sampler2D u_color_ramp;uniform vec2 u_image_res;uniform vec2 u_wind_min;uniform vec2 u_wind_max;uniform vec2 u_color_range;uniform vec2 u_display_range;uniform float u_opacity;varying vec2 v_tex_pos;vec2 windTexture(const vec2 uv){return texture2D(u_wind,uv).rg;}float bilinearU(const vec2 uv){vec2 px=1.0/u_image_res;vec2 vc=(floor(uv*u_image_res))*px;vec2 f=fract(uv*u_image_res);float tl=windTexture(vc).r;float tr=windTexture(vc+vec2(px.x,0)).r;float bl=windTexture(vc+vec2(0,px.y)).r;float br=windTexture(vc+px).r;return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}float bilinearV(const vec2 uv){vec2 px=1.0/u_image_res;vec2 vc=(floor(uv*u_image_res))*px;vec2 f=fract(uv*u_image_res);float tl=windTexture(vc).g;float tr=windTexture(vc+vec2(px.x,0.0)).g;float bl=windTexture(vc+vec2(0.0,px.y)).g;float br=windTexture(vc+px).g;return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}float getV(const vec2 uv){float min=u_wind_min.y;float max=u_wind_max.y;float r=bilinearV(uv);return r*(max-min)+min;}float getU(const vec2 uv){float min=u_wind_min.x;float max=u_wind_max.x;float r=bilinearU(uv);return r*(max-min)+min;}float windSpeed(const vec2 uv){float u=getU(uv);float v=getV(uv);return length(vec2(u,v));}const float PI=3.14159265359;vec2 mercatorToWGS84(vec2 xy){float y=radians(180.0-xy.y*360.0);y=360.0/PI*atan(exp(y))-90.0;y=y/-180.0+0.5;return vec2(xy.x,y);}void main(){vec2 globalWGS84=mercatorToWGS84(v_tex_pos);float value=windSpeed(globalWGS84);float value_t=(value-u_color_range.x)/(u_color_range.y-u_color_range.x);vec2 ramp_pos=vec2(fract(16.0*value_t),floor(16.0*value_t)/16.0);vec4 color=texture2D(u_color_ramp,ramp_pos);bool display=value<u_display_range.y&&value>u_display_range.x;if(display){gl_FragColor=vec4(floor(255.0*color*u_opacity)/255.0);}else{gl_FragColor=vec4(0.0,0.0,0.0,0.0);}}\"; // eslint-disable-line\n\nvar FillVert = \"#define GLSLIFY 1\\nattribute vec3 instancePositions;attribute vec3 instancePositions64Low;attribute vec2 a_texCoord;uniform mat4 u_matrix;uniform vec4 u_cameraEye;uniform vec4 u_cameraEye64Low;uniform float u_offset;uniform sampler2D u_wind;uniform vec2 u_image_res;uniform vec2 u_wind_min;uniform vec2 u_wind_max;uniform vec2 u_mapping_range;varying vec2 v_tex_pos;varying float v_value;vec2 windTexture(const vec2 uv){return texture2D(u_wind,uv).rg;}float bilinearU(const vec2 uv){vec2 px=1.0/u_image_res;vec2 vc=(floor(uv*u_image_res))*px;vec2 f=fract(uv*u_image_res);float tl=windTexture(vc).r;float tr=windTexture(vc+vec2(px.x,0)).r;float bl=windTexture(vc+vec2(0,px.y)).r;float br=windTexture(vc+px).r;return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}float bilinearV(const vec2 uv){vec2 px=1.0/u_image_res;vec2 vc=(floor(uv*u_image_res))*px;vec2 f=fract(uv*u_image_res);float tl=windTexture(vc).g;float tr=windTexture(vc+vec2(px.x,0.0)).g;float bl=windTexture(vc+vec2(0.0,px.y)).g;float br=windTexture(vc+px).g;return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}float getV(const vec2 uv){float min=u_wind_min.y;float max=u_wind_max.y;float r=bilinearV(uv);return r*(max-min)+min;}float getU(const vec2 uv){float min=u_wind_min.x;float max=u_wind_max.x;float r=bilinearU(uv);return r*(max-min)+min;}float windSpeed(const vec2 uv){float u=getU(uv);float v=getV(uv);float min=u_mapping_range.x;float max=u_mapping_range.y;float val=length(vec2(u,v));return val*(max-min)+min;}const float PI=3.14159265359;vec2 mercatorToWGS84(vec2 xy){float y=radians(180.0-xy.y*360.0);y=360.0/PI*atan(exp(y))-90.0;y=y/-180.0+0.5;return vec2(xy.x,y);}\\n#modules-transformZ\\nvoid main(){v_tex_pos=a_texCoord;vec2 globalWGS84=mercatorToWGS84(v_tex_pos);float value=windSpeed(globalWGS84);float z=transformZ(value,instancePositions);vec4 pos=vec4(instancePositions-u_cameraEye.xyz,0.0);pos+=vec4(instancePositions64Low-u_cameraEye64Low.xyz,0.0);\\n#modules-project\\n}\"; // eslint-disable-line\n\nclass WindFill extends Base {\n  constructor(gl, vShader, fShader, modules) {\n    super(gl, vShader || FillVert, fShader || FillFrag, modules || {});\n    this.vertShader = FillVert;\n    this.fragShader = FillFrag;\n  }\n  draw() {\n    if (this.checkExt !== void 0) {\n      const primitiveType = this.primitive || this.gl.TRIANGLES;\n      if (this.checkExt) {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_INT,\n          0\n        );\n      } else {\n        this.gl.drawElements(\n          primitiveType,\n          this.count,\n          this.gl.UNSIGNED_SHORT,\n          0\n        );\n      }\n    } else {\n      this.checkExt = this.gl.getExtension(\"OES_element_index_uint\");\n    }\n    return this;\n  }\n  translate() {\n    return this;\n  }\n  rotate() {\n    return this;\n  }\n  scale() {\n    return this;\n  }\n  destroyed() {\n  }\n}\n\nconst defaultOptions$2 = {\n  renderForm: \"r\",\n  styleSpec: {\n    \"fill-color\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"get\", \"value\"],\n      0,\n      \"#3288bd\",\n      10,\n      \"#66c2a5\",\n      20,\n      \"#abdda4\",\n      30,\n      \"#e6f598\",\n      40,\n      \"#fee08b\",\n      50,\n      \"#fdae61\",\n      60,\n      \"#f46d43\",\n      100,\n      \"#d53e4f\"\n    ],\n    opacity: 1\n  },\n  displayRange: [Infinity, Infinity],\n  mappingRange: [0, 0],\n  widthSegments: 1,\n  heightSegments: 1,\n  wireframe: false,\n  createPlaneBuffer: (points, widthSegments, heightSegments) => {\n    const [startX, endX, startY, endY] = [\n      points[0][0],\n      points[2][0],\n      points[0][1],\n      points[1][1]\n    ];\n    return getPlaneBuffer(\n      startX,\n      endX,\n      startY,\n      endY,\n      widthSegments,\n      heightSegments\n    );\n  },\n  injectShaderModules: {\n    \"#modules-transformZ\": `\nfloat transformZ(float value, vec3 pos) {\n  return 0.0;\n}\n    `,\n    \"#modules-project\": `\ngl_Position = u_matrix * vec4(pos.xy + vec2(u_offset, 0.0), pos.z + z, 1.0);\n    `\n  }\n};\nlet uid$1 = 0;\nclass ScalarFill {\n  constructor(gl, options) {\n    this.gl = gl;\n    this.uid = `ScalarFill_${uid$1}`;\n    uid$1++;\n    if (!this.gl) {\n      throw new Error(\"initialize error\");\n    }\n    if (!options) {\n      options = {};\n    }\n    this.options = {\n      ...defaultOptions$2,\n      ...options\n    };\n    this.opacity = this.options.opacity || 1;\n  }\n  updateOptions(options) {\n    this.options = {\n      ...this.options,\n      ...options\n    };\n    this.buildColorRamp();\n    if (typeof this.options.getZoom === \"function\") {\n      this.setOpacity(\n        createZoom(\n          this.uid,\n          this.options.getZoom(),\n          \"opacity\",\n          this.options.styleSpec,\n          true\n        )\n      );\n    }\n  }\n  setFillColor() {\n    this.buildColorRamp();\n  }\n  setOpacity(opacity) {\n    this.opacity = opacity;\n  }\n  handleZoom() {\n    if (typeof this.options.getZoom === \"function\") {\n      this.setOpacity(\n        createZoom(\n          this.uid,\n          this.options.getZoom(),\n          \"opacity\",\n          this.options.styleSpec\n        )\n      );\n    }\n  }\n  buildColorRamp() {\n    var _a;\n    const { data, colorRange } = createLinearGradient(\n      [],\n      (_a = this.options.styleSpec) == null ? void 0 : _a[\"fill-color\"]\n    );\n    if (colorRange) {\n      this.colorRange = colorRange;\n    }\n    if (data) {\n      this.colorRampTexture = createTexture(\n        this.gl,\n        this.gl.NEAREST,\n        data,\n        16,\n        16\n      );\n    }\n  }\n  initialize(gl) {\n    if (!this.drawCommand) {\n      if (this.options.renderForm === \"rg\") {\n        this.drawCommand = new WindFill(\n          gl,\n          void 0,\n          void 0,\n          this.options.injectShaderModules\n        );\n      } else if (this.options.renderForm === \"r\") {\n        this.drawCommand = new Fill(\n          gl,\n          void 0,\n          void 0,\n          this.options.injectShaderModules\n        );\n      } else {\n        console.warn(\"This type is not supported temporarily\");\n      }\n    }\n    this.buildColorRamp();\n    if (typeof this.options.getZoom === \"function\") {\n      this.setOpacity(\n        createZoom(\n          this.uid,\n          this.options.getZoom(),\n          \"opacity\",\n          this.options.styleSpec\n        )\n      );\n    }\n  }\n  initializeVertex(coordinates) {\n    let i = 0;\n    const len = coordinates.length;\n    const points = [];\n    for (; i < len; i++) {\n      const coords = coordinates[i];\n      const mc = this.getMercatorCoordinate(coords);\n      points.push([mc[0], mc[1]]);\n    }\n    const buffers = (this.options.createPlaneBuffer || defaultOptions$2.createPlaneBuffer)(\n      points,\n      this.options.widthSegments || 1,\n      this.options.heightSegments || 1\n    );\n    return {\n      indexes: buffers.elements.data,\n      wireframeIndexes: buffers.wireframeElements.data,\n      quadBuffer: createBuffer(\n        this.gl,\n        new Float32Array(buffers.position.data)\n      ),\n      quad64LowBuffer: createBuffer(\n        this.gl,\n        new Float32Array(buffers.positionLow.data)\n      ),\n      texCoordBuffer: createBuffer(this.gl, new Float32Array(buffers.uvs.data))\n    };\n  }\n  getTextureData(data) {\n    return new Promise((resolve, reject) => {\n      if (data.type === \"image\" && data.url) {\n        loadImage(data.url).then((image) => {\n          const processedData = {\n            width: image.width,\n            height: image.height,\n            texture: createTexture(\n              this.gl,\n              this.gl.LINEAR,\n              image,\n              image.width,\n              image.height\n            ),\n            ...this.initializeVertex(data.extent)\n          };\n          if (this.options.renderForm === \"rg\") {\n            processedData.uMin = data.uMin;\n            processedData.uMax = data.uMax;\n            processedData.vMin = data.vMin;\n            processedData.vMax = data.vMax;\n          } else if (this.options.renderForm === \"r\") {\n            processedData.min = data.min;\n            processedData.max = data.max;\n          } else {\n            console.warn(\"This type is not supported temporarily\");\n          }\n          resolve(processedData);\n        }).catch((error) => reject(error));\n      } else if (data.type === \"jsonArray\" && data.data) {\n        const gfsData = data.data;\n        let pos;\n        if (data.extent) {\n          pos = data.extent;\n        } else {\n          pos = [\n            [gfsData[0].header.lo1, gfsData[0].header.la1],\n            [gfsData[0].header.lo1, gfsData[0].header.la2],\n            [gfsData[0].header.lo2, gfsData[0].header.la1],\n            [gfsData[0].header.lo2, gfsData[0].header.la2]\n          ];\n        }\n        const processedData = {\n          width: gfsData[0].header.nx,\n          height: gfsData[0].header.ny,\n          ...this.initializeVertex(pos)\n        };\n        if (!this.worker) {\n          this.worker = new WorkerFactory();\n          this.worker.addEventListener(\"message\", ({ data: payload }) => {\n            if (this.options.renderForm === \"rg\") {\n              processedData.uMin = payload[1];\n              processedData.uMax = payload[2];\n              processedData.vMin = payload[3];\n              processedData.vMax = payload[4];\n              processedData.texture = createTexture(\n                this.gl,\n                this.gl.LINEAR,\n                new Uint8Array(payload[0]),\n                processedData.width,\n                processedData.height\n              );\n            } else if (this.options.renderForm === \"r\") {\n              processedData.min = payload[1];\n              processedData.max = payload[2];\n              processedData.texture = createTexture(\n                this.gl,\n                this.gl.LINEAR,\n                new Uint8Array(payload[0]),\n                processedData.width,\n                processedData.height\n              );\n            } else {\n              console.warn(\"This type is not supported temporarily\");\n            }\n            resolve(processedData);\n          });\n        }\n        if (this.options.renderForm === \"rg\") {\n          let uComp;\n          let vComp;\n          gfsData.forEach((record) => {\n            switch (record.header.parameterCategory + \",\" + record.header.parameterNumber) {\n              case \"1,2\":\n              case \"2,2\":\n                uComp = record;\n                break;\n              case \"1,3\":\n              case \"2,3\":\n                vComp = record;\n                break;\n            }\n          });\n          const u = new Float32Array(uComp.data);\n          const v = new Float32Array(vComp.data);\n          this.worker.postMessage([\"rg\", u, v]);\n        } else if (this.options.renderForm === \"r\") {\n          const singleData = new Float32Array(gfsData[0].data);\n          this.worker.postMessage([\"r\", singleData]);\n        } else {\n          console.warn(\"This type is not supported temporarily\");\n        }\n      }\n    });\n  }\n  setData(data, cb) {\n    if (this.gl && data) {\n      this.getTextureData(data).then((d) => {\n        this.data = d;\n        cb && cb(true);\n        if (this.data) {\n          this.initialize(this.gl);\n        }\n        if (this.options.triggerRepaint) {\n          this.handleZoom();\n          this.options.triggerRepaint();\n        }\n      }).catch((error) => {\n        cb && cb(false);\n        console.error(error);\n      });\n    }\n  }\n  getData() {\n    return this.data;\n  }\n  getMercatorCoordinate([lng, lat]) {\n    return [lng, lat];\n  }\n  prerender() {\n  }\n  render(matrix, offsetX, cameraParams) {\n    if (this.data && this.drawCommand && this.data.texture && this.colorRampTexture) {\n      const opacity = this.opacity;\n      const uniforms = {\n        u_opacity: isNumber(opacity) ? opacity : 1,\n        u_image_res: [this.data.width, this.data.height],\n        u_matrix: matrix,\n        u_offset: isNumber(offsetX) ? offsetX : 0,\n        u_color_ramp: this.colorRampTexture,\n        u_color_range: this.colorRange,\n        u_mapping_range: this.options.mappingRange || [0, 0]\n      };\n      if (cameraParams) {\n        uniforms.u_cameraEye = cameraParams.cameraEye;\n        uniforms.u_cameraEye64Low = cameraParams.cameraEye64Low;\n      }\n      if (this.options.renderForm === \"rg\") {\n        uniforms.u_wind_min = [this.data.uMin, this.data.vMin];\n        uniforms.u_wind_max = [this.data.uMax, this.data.vMax];\n        uniforms.u_wind = this.data.texture;\n        const speeds = [\n          Math.sqrt(\n            this.data.uMin * this.data.uMin + this.data.vMin * this.data.vMin\n          ),\n          Math.sqrt(\n            this.data.uMin * this.data.uMin + this.data.vMax * this.data.vMax\n          ),\n          Math.sqrt(\n            this.data.uMax * this.data.uMax + this.data.vMax * this.data.vMax\n          ),\n          Math.sqrt(\n            this.data.uMax * this.data.uMax + this.data.vMin * this.data.vMin\n          )\n        ];\n        const min = 0;\n        const max = Math.max(...speeds);\n        uniforms.u_display_range = this.options.displayRange || [min, max];\n      } else if (this.options.renderForm === \"r\") {\n        uniforms.u_range = [this.data.min, this.data.max];\n        uniforms.u_image = this.data.texture;\n        uniforms.u_display_range = this.options.displayRange || [\n          uniforms.u_range[0] - 1,\n          uniforms.u_range[1] + 1\n        ];\n      } else {\n        console.warn(\"This type is not supported temporarily\");\n      }\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      this.gl.enable(this.gl.DEPTH_TEST);\n      this.gl.depthMask(true);\n      this.gl.depthFunc(this.gl.LEQUAL);\n      const data = this.options.wireframe ? this.data.wireframeIndexes : this.data.indexes;\n      this.drawCommand.active().setUniforms(uniforms).setAttributes({\n        instancePositions: {\n          buffer: this.data.quadBuffer,\n          numComponents: 3\n        },\n        instancePositions64Low: {\n          buffer: this.data.quad64LowBuffer,\n          numComponents: 3\n        },\n        a_texCoord: {\n          buffer: this.data.texCoordBuffer,\n          numComponents: 2\n        }\n      }).elements({\n        data: new Uint32Array(data),\n        primitive: this.options.wireframe ? this.gl.LINES : this.gl.TRIANGLES,\n        count: data == null ? void 0 : data.length,\n        usage: this.gl.STATIC_DRAW\n      }).draw();\n      if (!depthEnabled) {\n        this.gl.disable(this.gl.DEPTH_TEST);\n      }\n    }\n  }\n  postrender() {\n  }\n  destroyData() {\n    if (this.data) ;\n  }\n  destroyed() {\n    this.destroyData();\n    if (this.worker) {\n      this.worker.terminate();\n    }\n  }\n}\n\nvar drawFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D u_wind;uniform vec2 u_wind_res;uniform vec4 u_wind_range;uniform vec2 u_color_range;uniform sampler2D u_color_ramp;varying vec2 v_particle_pos;vec2 decodeValue(const vec2 uv){vec4 u_color=texture2D(u_wind,uv);float u=u_wind_range[0]+((u_wind_range[1]-u_wind_range[0])*(u_color.r*255.0-1.0))/254.0;float v=u_wind_range[2]+((u_wind_range[3]-u_wind_range[2])*(u_color.g*255.0-1.0))/254.0;return vec2(u,v);}vec2 lookup_wind(const vec2 uv){vec2 px=1.0/u_wind_res;vec2 vc=(floor(uv*u_wind_res))*px;vec2 f=fract(uv*u_wind_res);vec2 tl=decodeValue(vc);vec2 tr=decodeValue(vc+vec2(px.x,0));vec2 bl=decodeValue(vc+vec2(0,px.y));vec2 br=decodeValue(vc+px);return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}void main(){vec2 velocity=lookup_wind(v_particle_pos);float speed_t=length(velocity);float value_t=(speed_t-u_color_range.x)/(u_color_range.y-u_color_range.x);vec2 ramp_pos=vec2(fract(16.0*value_t),floor(16.0*value_t)/16.0);vec4 color=texture2D(u_color_ramp,ramp_pos);gl_FragColor=vec4(floor(255.0*color*color.a)/255.0);}\"; // eslint-disable-line\n\nvar drawVert = \"#define GLSLIFY 1\\nattribute float a_index;uniform sampler2D u_particles_current;uniform sampler2D u_particles_next;uniform float u_particles_res;uniform vec2 u_world;uniform float u_zoom;uniform vec4 u_bbox;uniform float u_offset;uniform float u_width;uniform float u_aspectRatio;uniform mat4 u_matrix;varying vec2 v_particle_pos;const vec2 bitEnc=vec2(1.0,255.0);const vec2 bitDec=1.0/bitEnc;vec2 fromRGBA(const vec4 color){vec4 rounded_color=floor(color*255.0+0.5)/255.0;float x=dot(rounded_color.rg,bitDec);float y=dot(rounded_color.ba,bitDec);return vec2(x,y);}vec4 buildOffset(vec2 perp){vec2 normal=perp*u_width;normal.x/=u_aspectRatio;return vec4(normal,0.0,0.0);}vec4 buildOffset(vec2 perp,vec2 scale){vec2 normal=perp/scale*u_width;normal.x/=u_aspectRatio;return vec4(normal,0.0,0.0);}vec4 getPosWithProject(vec2 current_pos,vec2 next_pos,float v_index){vec4 currentProjected=u_matrix*vec4(current_pos,0.0,1.0);vec4 nextProjected=u_matrix*vec4(next_pos,0.0,1.0);vec2 currentScreen=currentProjected.xy/currentProjected.w*u_world;vec2 nextScreen=nextProjected.xy/nextProjected.w*u_world;vec2 dir=normalize(nextScreen-currentScreen);vec2 perp=vec2(-dir.y,dir.x);float d=length(nextScreen-currentScreen);vec4 pos=currentProjected;if(a_index-v_index*6.0==0.0){pos=currentProjected+buildOffset(perp);}else if(a_index-v_index*6.0==1.0){pos=currentProjected-buildOffset(perp);}else if(a_index-v_index*6.0==2.0){pos=nextProjected+buildOffset(perp);}else if(a_index-v_index*6.0==3.0){pos=nextProjected+buildOffset(perp);}else if(a_index-v_index*6.0==4.0){pos=nextProjected-buildOffset(perp);}else if(a_index-v_index*6.0==5.0){pos=currentProjected-buildOffset(perp);}if(d>20.0||d<0.01){pos.xy+=u_world*pow(2.0,u_zoom+1.0);}return pos;}void main(){float v_index=floor(a_index/6.0);float ux=fract(v_index/u_particles_res);float vy=floor(v_index/u_particles_res)/u_particles_res;vec4 current_color=texture2D(u_particles_current,vec2(ux,vy));vec4 next_color=texture2D(u_particles_next,vec2(ux,vy));vec2 v_current_particle_pos=fromRGBA(current_color);vec2 v_next_particle_pos=fromRGBA(next_color);vec2 vc_pos=u_bbox.xy+v_current_particle_pos*(u_bbox.zw-u_bbox.xy);vec2 nc_pos=u_bbox.xy+v_next_particle_pos*(u_bbox.zw-u_bbox.xy);v_particle_pos=mix(vc_pos,nc_pos,0.5);v_current_particle_pos=clamp(vc_pos,0.0,1.0)+vec2(u_offset,0.0);v_next_particle_pos=clamp(nc_pos,0.0,1.0)+vec2(u_offset,0.0);gl_PointSize=1.0;gl_Position=getPosWithProject(v_current_particle_pos,v_next_particle_pos,v_index);}\"; // eslint-disable-line\n\nvar screenFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D u_screen;uniform float u_opacity;uniform float u_fade;varying vec2 v_tex_pos;void main(){vec4 color=texture2D(u_screen,v_tex_pos);gl_FragColor=vec4(floor(255.0*color*u_opacity*u_fade)/255.0);}\"; // eslint-disable-line\n\nvar screenVert = \"#define GLSLIFY 1\\nattribute vec2 a_pos;attribute vec2 a_tex_pos;varying vec2 v_tex_pos;void main(){v_tex_pos=a_tex_pos;gl_Position=vec4(a_pos*2.0-1.0,0,1);}\"; // eslint-disable-line\n\nvar updateFrag = \"precision highp float;\\n#define GLSLIFY 1\\nuniform sampler2D u_wind;uniform sampler2D u_particles;uniform vec4 u_bbox;uniform vec2 u_wind_res;uniform vec4 u_wind_range;uniform float u_rand_seed;uniform float u_nodata;uniform float u_drop_rate;uniform float u_drop_rate_bump;uniform vec2 u_speed_factor;varying vec2 v_tex_pos;const vec2 bitEnc_0=vec2(1.0,255.0);const vec2 bitDec_0=1.0/bitEnc_0;vec4 toRGBA(const vec2 pos_0){vec2 rg=bitEnc_0*pos_0.x;rg=fract(rg);rg-=rg.yy*vec2(1.0/255.0,0.0);vec2 ba=bitEnc_0*pos_0.y;ba=fract(ba);ba-=ba.yy*vec2(1.0/255.0,0.0);return vec4(rg,ba);}const vec2 bitEnc_1=vec2(1.0,255.0);const vec2 bitDec_1=1.0/bitEnc_1;vec2 fromRGBA(const vec4 color){vec4 rounded_color=floor(color*255.0+0.5)/255.0;float x=dot(rounded_color.rg,bitDec_1);float y=dot(rounded_color.ba,bitDec_1);return vec2(x,y);}const vec3 rand_constants=vec3(12.9898,78.233,4375.85453);float rand(const vec2 co){float t=dot(rand_constants.xy,co);return fract(sin(t)*(rand_constants.z+t));}vec2 decodeValue(const vec2 uv){vec4 u_color=texture2D(u_wind,uv);float u=u_wind_range[0]+((u_wind_range[1]-u_wind_range[0])*(u_color.r*255.0-1.0))/254.0;float v=u_wind_range[2]+((u_wind_range[3]-u_wind_range[2])*(u_color.g*255.0-1.0))/254.0;return vec2(u,v);}vec2 getColor(const vec2 uv){vec2 px=1.0/(u_wind_res);vec2 vc=(floor(uv*(u_wind_res)))*px;vec4 u_color=texture2D(u_wind,vc);return vec2(u_color.r,u_color.g);}vec2 lookup_wind(const vec2 uv){vec2 px=1.0/u_wind_res;vec2 vc=(floor(uv*u_wind_res))*px;vec2 f=fract(uv*u_wind_res);vec2 tl=decodeValue(vc);vec2 tr=decodeValue(vc+vec2(px.x,0));vec2 bl=decodeValue(vc+vec2(0,px.y));vec2 br=decodeValue(vc+px);return mix(mix(tl,tr,f.x),mix(bl,br,f.x),f.y);}void main(){vec4 color=texture2D(u_particles,v_tex_pos);vec2 pos=fromRGBA(color);vec2 global_pos=u_bbox.xy+pos*(u_bbox.zw-u_bbox.xy);vec2 alphas=getColor(global_pos);if(alphas.x<=u_nodata||alphas.y<=u_nodata){discard;}vec2 velocity=lookup_wind(global_pos);float speed_t=length(velocity);vec2 offset=vec2(velocity.x,-velocity.y)*u_speed_factor;pos=fract(1.0+pos+offset);vec2 seed=(pos+v_tex_pos)*u_rand_seed;float drop_rate=u_drop_rate+speed_t*u_drop_rate_bump;float drop=step(1.0-drop_rate,rand(seed));vec2 random_pos=vec2(rand(seed+1.3),rand(seed+2.1));pos=mix(pos,random_pos,drop);gl_FragColor=toRGBA(pos);}\"; // eslint-disable-line\n\nvar updateVert = \"#define GLSLIFY 1\\nattribute vec2 a_pos;varying vec2 v_tex_pos;void main(){v_tex_pos=a_pos;gl_Position=vec4(a_pos*2.0-1.0,0,1);}\"; // eslint-disable-line\n\nconst defaultOptions$1 = {\n  callback: () => void 0\n};\nclass Raf {\n  constructor(options = {}) {\n    this.options = {\n      ...defaultOptions$1,\n      ...options\n    };\n    this.reset();\n    this.animate = this.animate.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n  reset() {\n    this.animating = false;\n    this.isVisible = true;\n    if (this.raf !== void 0) {\n      cancelAnimationFrame(this.raf);\n    }\n  }\n  start() {\n    if (this.animating) {\n      return;\n    }\n    this.animating = true;\n    document.addEventListener(\n      \"visibilitychange\",\n      this.onVisibilityChange,\n      false\n    );\n    this.raf = requestAnimationFrame(this.animate);\n  }\n  stop() {\n    this.reset();\n    document.removeEventListener(\n      \"visibilitychange\",\n      this.onVisibilityChange,\n      false\n    );\n  }\n  animate() {\n    if (!this.animating || !this.isVisible) {\n      return;\n    }\n    this.options.callback((performance || Date).now());\n    this.raf = requestAnimationFrame(this.animate);\n  }\n  onVisibilityChange() {\n    this.isVisible = !document.hidden;\n    if (this.isVisible) {\n      this.reset();\n      this.start();\n    }\n  }\n}\n\nconst defaultOptions = {\n  styleSpec: {\n    color: [\n      \"interpolate\",\n      [\"linear\"],\n      [\"get\", \"value\"],\n      0,\n      \"#fff\",\n      100,\n      \"#fff\"\n    ],\n    opacity: 1,\n    numParticles: 65535\n  },\n  opacity: 1,\n  lineWidth: 2,\n  speedFactor: 1,\n  fadeOpacity: 0.93,\n  dropRate: 3e-3,\n  dropRateBump: 2e-3\n};\nlet uid = 0;\nclass WindParticles {\n  constructor(gl, options = {}) {\n    this.gl = gl;\n    this.uid = `WindParticles_${uid}`;\n    uid++;\n    if (!this.gl) {\n      throw new Error(\"initialize error\");\n    }\n    this.options = {\n      ...defaultOptions,\n      ...options\n    };\n    this.opacity = this.options.opacity || 1;\n    this.visible = this.options.visible !== void 0 || true;\n    this.alpha = 0.9;\n    this.frameTime = 0;\n    this.lastTime = 0;\n    this.initialize(this.gl);\n  }\n  initialize(gl) {\n    this.drawCommand = new Base(gl, drawVert, drawFrag);\n    this.drawCommand.draw = function() {\n      this.gl.drawArrays(this.primitive, 0, this.count);\n    };\n    this.updateCommand = new Base(gl, updateVert, updateFrag);\n    this.updateCommand.draw = function() {\n      this.gl.drawArrays(this.primitive, 0, 4);\n    };\n    this.screenCommand = new Base(gl, screenVert, screenFrag);\n    this.screenCommand.draw = function() {\n      this.gl.drawArrays(this.primitive, 0, 4);\n    };\n    this.fbo = gl.createFramebuffer();\n    this.raf = new Raf({\n      callback: () => {\n        if (this.options.triggerRepaint) {\n          this.options.triggerRepaint();\n        }\n      }\n    });\n    this.resize();\n    this.buildColorRamp();\n    if (typeof this.options.getZoom === \"function\") {\n      const zoom = this.options.getZoom();\n      this.setOpacity(\n        createZoom(this.uid, zoom, \"opacity\", this.options.styleSpec)\n      );\n      this.numParticles = createZoom(\n        this.uid,\n        zoom,\n        \"numParticles\",\n        this.options.styleSpec\n      );\n    }\n    this.start();\n  }\n  set numParticles(numParticles) {\n    if (numParticles === void 0) {\n      return;\n    }\n    const gl = this.gl;\n    const particleRes = Math.ceil(Math.sqrt(numParticles));\n    this.particleStateResolution = particleRes;\n    this.privateNumParticles = particleRes * particleRes;\n    const particleState = new Uint8Array(this.privateNumParticles * 4);\n    for (let i = 0; i < particleState.length; i++) {\n      particleState[i] = Math.floor(Math.random() * 256);\n    }\n    if (!this.currentParticleStateTexture) {\n      this.currentParticleStateTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        particleState,\n        particleRes,\n        particleRes\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.currentParticleStateTexture,\n        particleRes,\n        particleRes,\n        particleState\n      );\n    }\n    if (!this.nextParticleStateTexture) {\n      this.nextParticleStateTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        particleState,\n        particleRes,\n        particleRes\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.nextParticleStateTexture,\n        particleRes,\n        particleRes,\n        particleState\n      );\n    }\n    const num = this.privateNumParticles * 6;\n    const particleIndices = new Float32Array(num);\n    for (let i = 0; i < num; i++) {\n      particleIndices[i] = i;\n    }\n    if (!this.particleIndexBuffer) {\n      this.particleIndexBuffer = createBuffer(gl, particleIndices);\n    } else {\n      updateBufferData(gl, this.particleIndexBuffer, particleIndices);\n    }\n  }\n  get numParticles() {\n    return this.privateNumParticles;\n  }\n  updateOptions(options) {\n    const styleSpec = options.styleSpec || {};\n    this.options = {\n      ...this.options,\n      ...options,\n      styleSpec: {\n        ...this.options.styleSpec,\n        ...styleSpec\n      }\n    };\n    this.buildColorRamp();\n    if (typeof this.options.getZoom === \"function\") {\n      const zoom = this.options.getZoom();\n      this.setOpacity(\n        createZoom(this.uid, zoom, \"opacity\", this.options.styleSpec, true)\n      );\n      this.numParticles = createZoom(\n        this.uid,\n        zoom,\n        \"numParticles\",\n        this.options.styleSpec,\n        true\n      );\n    }\n  }\n  setOpacity(opacity) {\n    this.opacity = opacity;\n  }\n  getOpacity() {\n    return this.opacity;\n  }\n  handleMoveend() {\n    this.updateRenderState();\n    clearScene(this.gl, [0, 0, 0, 0]);\n  }\n  handleMovestart() {\n    this.alpha = 0;\n  }\n  handleZoom() {\n    if (typeof this.options.getZoom === \"function\") {\n      const zoom = this.options.getZoom();\n      this.setOpacity(\n        createZoom(this.uid, zoom, \"opacity\", this.options.styleSpec)\n      );\n      this.numParticles = createZoom(\n        this.uid,\n        zoom,\n        \"numParticles\",\n        this.options.styleSpec\n      );\n    }\n  }\n  buildColorRamp() {\n    var _a;\n    const { data, colorRange } = createLinearGradient(\n      [],\n      (_a = this.options.styleSpec) == null ? void 0 : _a.color\n    );\n    if (colorRange) {\n      this.colorRange = colorRange;\n    }\n    if (data) {\n      this.colorRampTexture = createTexture(\n        this.gl,\n        this.gl.NEAREST,\n        data,\n        16,\n        16\n      );\n    }\n  }\n  drawTexture(matrix) {\n    if (this.fbo && this.screenTexture && this.nextParticleStateTexture) {\n      bindFramebuffer(this.gl, this.fbo, this.screenTexture);\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.disable(this.gl.BLEND);\n      this.screenCommand.active().resize(...this.size).setUniforms({\n        u_screen: this.backgroundTexture,\n        u_opacity: this.options.fadeOpacity,\n        u_fade: 1\n      }).setAttributes({\n        a_pos: {\n          buffer: this.data.backgroundBuffer,\n          numComponents: 2\n        },\n        a_tex_pos: {\n          buffer: this.data.backgroundTexCoordBuffer,\n          numComponents: 2\n        }\n      }).setPrimitive(this.gl.TRIANGLE_STRIP).draw();\n      if (depthEnabled) {\n        this.gl.enable(this.gl.DEPTH_TEST);\n      }\n      if (blendingEnabled) {\n        this.gl.enable(this.gl.BLEND);\n      }\n      this.drawParticles(matrix);\n      bindFramebuffer(this.gl, null);\n      [this.backgroundTexture, this.screenTexture] = [\n        this.screenTexture,\n        this.backgroundTexture\n      ];\n    }\n  }\n  drawScreen() {\n    const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n    const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n    this.gl.disable(this.gl.DEPTH_TEST);\n    this.gl.enable(this.gl.BLEND);\n    this.gl.blendColor(0, 0, 0, 0);\n    this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n    this.screenCommand.active().resize().setUniforms({\n      u_screen: this.screenTexture,\n      u_opacity: this.visible ? this.opacity : 0,\n      u_fade: this.alpha\n    }).setAttributes({\n      a_pos: {\n        buffer: this.data.buffer,\n        numComponents: 2\n      },\n      a_tex_pos: {\n        buffer: this.data.texCoordBuffer,\n        numComponents: 2\n      }\n    }).setPrimitive(this.gl.TRIANGLE_STRIP).draw();\n    if (depthEnabled) {\n      this.gl.enable(this.gl.DEPTH_TEST);\n    }\n    if (!blendingEnabled) {\n      this.gl.disable(this.gl.BLEND);\n    }\n  }\n  updateParticles() {\n    if (this.fbo && this.currentParticleStateTexture && this.nextParticleStateTexture) {\n      bindFramebuffer(this.gl, this.fbo, this.nextParticleStateTexture);\n      const timeScale = this.options.speedFactor * 2.5;\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.disable(this.gl.BLEND);\n      this.updateCommand.active().resize(this.particleStateResolution, this.particleStateResolution).setUniforms({\n        u_wind_res: [this.data.width, this.data.height],\n        u_rand_seed: Math.random(),\n        u_wind_range: [\n          this.data.uMin,\n          this.data.uMax,\n          this.data.vMin,\n          this.data.vMax\n        ],\n        u_drop_rate: this.options.dropRate,\n        u_drop_rate_bump: this.options.dropRateBump,\n        u_speed_factor: [\n          timeScale * this.frameTime / this.size[0],\n          timeScale * this.frameTime / this.size[1]\n        ],\n        u_wind: this.data.texture,\n        u_bbox: this.renderExtent,\n        nodata: this.data.nodata,\n        u_particles: this.currentParticleStateTexture\n      }).setAttributes({\n        a_pos: {\n          buffer: this.data.quadBuffer,\n          numComponents: 2\n        }\n      }).setPrimitive(this.gl.TRIANGLE_STRIP).draw();\n      if (depthEnabled) {\n        this.gl.enable(this.gl.DEPTH_TEST);\n      }\n      if (blendingEnabled) {\n        this.gl.enable(this.gl.BLEND);\n      }\n      [this.currentParticleStateTexture, this.nextParticleStateTexture] = [\n        this.nextParticleStateTexture,\n        this.currentParticleStateTexture\n      ];\n    }\n  }\n  drawParticles(matrix) {\n    if (this.particleIndexBuffer && this.currentParticleStateTexture && this.nextParticleStateTexture) {\n      const depthEnabled = this.gl.isEnabled(this.gl.DEPTH_TEST);\n      const blendingEnabled = this.gl.isEnabled(this.gl.BLEND);\n      this.gl.disable(this.gl.DEPTH_TEST);\n      this.gl.disable(this.gl.BLEND);\n      const zoom = this.options.getZoom();\n      const worlds = this.options.getWorlds();\n      for (let i = 0; i < worlds.length; i++) {\n        this.drawCommand.active().setUniforms({\n          u_width: this.options.lineWidth,\n          u_world: this.size,\n          u_matrix: matrix,\n          u_zoom: zoom,\n          u_bbox: this.renderExtent,\n          u_offset: worlds[i],\n          u_wind: this.data.texture,\n          u_wind_res: [this.data.width, this.data.height],\n          u_wind_range: [\n            this.data.uMin,\n            this.data.uMax,\n            this.data.vMin,\n            this.data.vMax\n          ],\n          u_color_ramp: this.colorRampTexture,\n          u_color_range: this.colorRange,\n          u_aspectRatio: this.size[0] / this.size[1],\n          u_particles_current: this.currentParticleStateTexture,\n          u_particles_next: this.nextParticleStateTexture,\n          u_particles_res: this.particleStateResolution\n        }).setAttributes({\n          a_index: {\n            buffer: this.particleIndexBuffer,\n            numComponents: 1\n          }\n        }).setPrimitive(this.gl.TRIANGLES).runTimes(this.particleStateResolution ** 2 * 6).draw();\n      }\n      if (blendingEnabled) {\n        this.gl.enable(this.gl.BLEND);\n      }\n      if (depthEnabled) {\n        this.gl.enable(this.gl.DEPTH_TEST);\n      }\n    }\n  }\n  updateRenderState() {\n    this.renderExtent = this.options.getExtent();\n  }\n  resize() {\n    const gl = this.gl;\n    this.size = this.options.getSize();\n    this.updateRenderState();\n    const emptyPixels = new Uint8Array(this.size[0] * this.size[1] * 4);\n    if (!this.backgroundTexture) {\n      this.backgroundTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        emptyPixels,\n        this.size[0],\n        this.size[1]\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.backgroundTexture,\n        this.size[0],\n        this.size[1],\n        emptyPixels\n      );\n    }\n    if (!this.screenTexture) {\n      this.screenTexture = createTexture(\n        gl,\n        gl.NEAREST,\n        emptyPixels,\n        this.size[0],\n        this.size[1]\n      );\n    } else {\n      resizeTexture(\n        gl,\n        this.screenTexture,\n        this.size[0],\n        this.size[1],\n        emptyPixels\n      );\n    }\n    if (this.fbo) {\n      resizeFramebuffer(\n        gl,\n        this.fbo,\n        this.size[0],\n        this.size[1],\n        this.screenTexture\n      );\n    }\n  }\n  start() {\n    this.raf.start();\n    if (this.options.triggerRepaint) {\n      this.options.triggerRepaint();\n    }\n  }\n  stop() {\n    this.raf.stop();\n    clearScene(this.gl, [0, 0, 0, 0]);\n    if (this.options.triggerRepaint) {\n      this.options.triggerRepaint();\n    }\n  }\n  prerender(matrix) {\n    if (this.data) {\n      this.updateParticles();\n      this.drawTexture(matrix);\n      const now = 1e-3 * Date.now();\n      this.frameTime = Math.min(now - (this.lastTime || 0), 0.05);\n      this.lastTime = now;\n    }\n  }\n  render() {\n    if (this.data) {\n      if (this.options.interacting()) {\n        if (this.alpha < 1) {\n          this.alpha += 3 * this.frameTime;\n          if (this.alpha > 1 || !this.frameTime) {\n            this.alpha = 1;\n          }\n        }\n      }\n      this.drawScreen();\n    }\n    return this;\n  }\n  initializeVertex(coordinates) {\n    let i = 0;\n    const len = coordinates.length;\n    const instancePositions = new Float32Array(len * 2);\n    for (; i < len; i++) {\n      const coords = coordinates[i];\n      const mc = this.getMercatorCoordinate(coords);\n      instancePositions[i * 2] = mc[0];\n      instancePositions[i * 2 + 1] = mc[1];\n    }\n    return {\n      quadBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0, 0, 0, 1, 1, 0, 1, 1])\n      ),\n      buffer: createBuffer(this.gl, instancePositions),\n      texCoordBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0, 0, 0, 1, 1, 0, 1, 1])\n      ),\n      backgroundBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0, 0, 0, 1, 1, 0, 1, 1])\n      ),\n      backgroundTexCoordBuffer: createBuffer(\n        this.gl,\n        new Float32Array([0, 0, 0, 1, 1, 0, 1, 1])\n      )\n    };\n  }\n  getTextureData(data) {\n    return new Promise((resolve, reject) => {\n      if (data.type === \"image\" && data.url) {\n        loadImage(data.url).then((image) => {\n          const processedData = {\n            width: image.width,\n            height: image.height,\n            texture: createTexture(\n              this.gl,\n              this.gl.LINEAR,\n              image,\n              image.width,\n              image.height\n            ),\n            nodata: data.nodata || 0,\n            ...this.initializeVertex(data.extent)\n          };\n          processedData.uMin = data.uMin;\n          processedData.uMax = data.uMax;\n          processedData.vMin = data.vMin;\n          processedData.vMax = data.vMax;\n          resolve(processedData);\n        }).catch((error) => reject(error));\n      }\n    });\n  }\n  setData(data, cb) {\n    if (this.gl && data) {\n      this.getTextureData(data).then((d) => {\n        this.data = d;\n        cb && cb(true);\n        if (this.options.triggerRepaint) {\n          this.options.triggerRepaint();\n        }\n      }).catch((error) => {\n        cb && cb(false);\n        console.error(error);\n      });\n    }\n  }\n  getData() {\n    return this.data;\n  }\n  getMercatorCoordinate([lng, lat]) {\n    return [lng, lat];\n  }\n  destroyData() {\n    if (this.data) {\n      const {\n        texture,\n        quadBuffer,\n        buffer,\n        texCoordBuffer,\n        backgroundBuffer,\n        backgroundTexCoordBuffer\n      } = this.data;\n      if (texture) {\n        this.gl.deleteTexture(texture);\n      }\n      if (buffer) {\n        this.gl.deleteBuffer(buffer);\n      }\n      if (quadBuffer) {\n        this.gl.deleteBuffer(quadBuffer);\n      }\n      if (texCoordBuffer) {\n        this.gl.deleteBuffer(texCoordBuffer);\n      }\n      if (backgroundBuffer) {\n        this.gl.deleteBuffer(backgroundBuffer);\n      }\n      if (backgroundTexCoordBuffer) {\n        this.gl.deleteBuffer(backgroundTexCoordBuffer);\n      }\n      delete this.data;\n    }\n  }\n  destroyed() {\n    this.stop();\n    if (this.currentParticleStateTexture) {\n      this.gl.deleteTexture(this.currentParticleStateTexture);\n      this.currentParticleStateTexture = null;\n    }\n    if (this.nextParticleStateTexture) {\n      this.gl.deleteTexture(this.nextParticleStateTexture);\n      this.nextParticleStateTexture = null;\n    }\n    if (this.backgroundTexture) {\n      this.gl.deleteTexture(this.backgroundTexture);\n      this.backgroundTexture = null;\n    }\n    if (this.screenTexture) {\n      this.gl.deleteTexture(this.screenTexture);\n      this.screenTexture = null;\n    }\n    if (this.fbo) {\n      this.gl.deleteFramebuffer(this.fbo);\n      this.fbo = null;\n    }\n    this.destroyData();\n  }\n}\n\nexport { ScalarFill, WindParticles, bindAttribute, bindFramebuffer, bindTexture, calcMinMax, clearScene, createBuffer, createProgram, createShader, createTexture, defaultOptions$2 as defaultOptions, defineShader, destroyTexture, findStopLessThanOrEqualTo, fp64LowPart, getDevicePixelRatio, getEye, getGlContext, getPlaneBuffer, injectShaderModule, isNumber, isValide, loadImage, mat4Invert, resizeCanvasSize, resizeFramebuffer, resizeTexture, transformMat4, updateBufferData };\n//# sourceMappingURL=wind-gl-core.esm.js.map\n","import * as mapboxgl from 'mapbox-gl';\n\nimport {\n  fp64LowPart,\n  getEye,\n  IOptions,\n  ScalarFill as ScalarCore,\n  // @ts-ignore\n} from 'wind-gl-core';\n\nexport interface IScalarFillOptions extends IOptions {\n  wrapX: boolean;\n}\n\nfunction getCoords([lng, lat]: [number, number]): [number, number] {\n  const mercatorCoordinate = mapboxgl.MercatorCoordinate.fromLngLat({\n    lng,\n    lat,\n  });\n  return [mercatorCoordinate.x, mercatorCoordinate.y];\n}\n\nexport default class ScalarFill {\n  public gl: WebGLRenderingContext;\n  public map: mapboxgl.Map;\n  public id: string;\n  public type: string;\n  public renderingMode: '2d' | '3d';\n  private options: any;\n  private data: any;\n  private scalarFill: ScalarCore | null;\n\n  constructor(id: string, data: any, options?: Partial<IScalarFillOptions>) {\n    this.id = id;\n    this.type = 'custom';\n    this.renderingMode = '3d';\n    this.options = {\n      ...(options || {}),\n    };\n\n    this.data = data;\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  public handleZoom() {\n    if (this.scalarFill) {\n      this.scalarFill.handleZoom();\n    }\n  }\n\n  public initialize() {\n    if (!this.scalarFill && this.gl) {\n      this.scalarFill = new ScalarCore(this.gl, {\n        opacity: this.options.opacity,\n        renderForm: this.options.renderForm,\n        styleSpec: this.options.styleSpec,\n        displayRange: this.options.displayRange,\n        mappingRange: this.options.mappingRange,\n        widthSegments: this.options.widthSegments,\n        heightSegments: this.options.heightSegments,\n        wireframe: this.options.wireframe,\n        createPlaneBuffer: this.options.createPlaneBuffer,\n        getZoom: () => this.map.getZoom(),\n        triggerRepaint: () => {\n          this.map.triggerRepaint();\n        },\n        injectShaderModules: {\n          '#modules-transformZ': `\nconst float MATH_PI = 3.141592653589793;\nconst float earthRadius = 6371008.8;\nconst float earthCircumfrence = 2.0 * MATH_PI * earthRadius;\n\n            float latFromMercatorY(float y) {\n  float y2 = 180.0 - y * 360.0;\n  return 360.0 / MATH_PI * atan(exp(y2 * MATH_PI / 180.0)) - 90.0;\n}\n\nfloat circumferenceAtLatitude(float latitude) {\n  return earthCircumfrence * cos(latitude * MATH_PI / 180.0);\n}\n\nfloat mercatorScale(float lat) {\n  return 1.0 / cos(lat * MATH_PI / 180.0);\n}\n\nfloat transformZ(float value, vec3 pos) {\n  float mercatorY = pos.y;\n  //  float scale = circumferenceAtLatitude(latFromMercatorY(mercatorY));\n  float scale = earthCircumfrence * mercatorScale(latFromMercatorY(mercatorY));\n\n  return value / scale;\n}\n          `,\n          '#modules-project': `\ngl_Position = u_matrix * vec4(pos.xy + vec2(u_offset, 0.0), pos.z + z, pos.w);\ngl_Position.w += u_cameraEye.w;\n    `,\n        },\n      });\n\n      this.scalarFill.getMercatorCoordinate = getCoords;\n\n      this.map.on('zoom', this.handleZoom);\n    }\n    if (this.data) {\n      this.setData(this.data);\n    }\n  }\n\n  public updateOptions(options: Partial<IScalarFillOptions>) {\n    this.options = {\n      ...this.options,\n      ...(options || {}),\n    };\n    if (this.scalarFill) {\n      this.scalarFill.updateOptions(options);\n    }\n  }\n\n  public onAdd(map: mapboxgl.Map, gl: WebGLRenderingContext) {\n    this.gl = gl;\n    this.map = map;\n\n    if (this.map) {\n      this.initialize();\n    }\n  }\n\n  public setData(data: any) {\n    return new Promise((resolve, reject) => {\n      this.data = data;\n      if (this.data && this.scalarFill) {\n        this.scalarFill.setData(this.data, (status) => {\n          if (status) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  // This is called when the map is destroyed or the gl context lost.\n  public onRemove(map: mapboxgl.Map) {\n    if (this.scalarFill) {\n      this.scalarFill.destroyed();\n      this.scalarFill = null;\n    }\n    // @ts-ignore\n    delete this.gl;\n    // @ts-ignore\n    delete this.map;\n    map.off('zoom', this.handleZoom);\n  }\n\n  public getWrappedWorlds() {\n    const result = [0];\n\n    if (this.options.wrapX) {\n      // @ts-ignore\n      const { width, height } = this.map.transform;\n      // @ts-ignore\n      const utl = this.map.transform.pointCoordinate(new mapboxgl.Point(0, 0));\n      // @ts-ignore\n      const utr = this.map.transform.pointCoordinate(\n        new mapboxgl.Point(width, 0),\n      );\n      // @ts-ignore\n      const ubl = this.map.transform.pointCoordinate(\n        new mapboxgl.Point(width, height),\n      );\n      // @ts-ignore\n      const ubr = this.map.transform.pointCoordinate(\n        new mapboxgl.Point(0, height),\n      );\n      const w0 = Math.floor(Math.min(utl.x, utr.x, ubl.x, ubr.x));\n      const w1 = Math.floor(Math.max(utl.x, utr.x, ubl.x, ubr.x));\n\n      const extraWorldCopy = 1;\n\n      for (let w = w0 - extraWorldCopy; w <= w1 + extraWorldCopy; w++) {\n        if (w === 0) {\n          continue;\n        }\n        result.push(w);\n      }\n    }\n    return result;\n  }\n\n  public render(gl: WebGLRenderingContext, matrix: number[]) {\n    const cameraEye = getEye(matrix);\n    const cameraEye64Low = cameraEye.map((item: number) => fp64LowPart(item));\n    if (this.data && this.scalarFill) {\n      const worlds = this.getWrappedWorlds();\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < worlds.length; i++) {\n        this.scalarFill.render(matrix, worlds[i], {\n          cameraEye,\n          cameraEye64Low,\n        });\n      }\n    }\n  }\n}\n","import * as mapboxgl from 'mapbox-gl';\n// @ts-ignore\nimport { IWindOptions, WindParticles } from 'wind-gl-core';\n\nexport interface IParticlesOptions extends IWindOptions {\n  wrapX: boolean;\n}\n\nfunction getCoords([lng, lat]: [number, number]): [number, number] {\n  const mercatorCoordinate = mapboxgl.MercatorCoordinate.fromLngLat({\n    lng,\n    lat,\n  });\n  return [mercatorCoordinate.x, mercatorCoordinate.y];\n}\n\nexport default class Particles {\n  private gl: WebGLRenderingContext;\n  public map: any;\n  public id: string;\n  public type: string;\n  public renderingMode: '2d' | '3d';\n  private options: any;\n  private data: any;\n  private layer: any;\n\n  constructor(id: string, data: any, options?: Partial<IParticlesOptions>) {\n    this.id = id;\n    this.type = 'custom';\n    this.renderingMode = '2d';\n    this.options = {\n      ...(options || {}),\n    };\n\n    this.data = data;\n\n    this.resize = this.resize.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.handleMovestart = this.handleMovestart.bind(this);\n    this.handleMoveend = this.handleMoveend.bind(this);\n  }\n\n  public updateOptions(options: Partial<IWindOptions>) {\n    this.options = {\n      ...this.options,\n      ...(options || {}),\n    };\n    if (this.layer) {\n      this.layer.updateOptions(options);\n    }\n  }\n\n  public handleZoom() {\n    if (this.layer) {\n      this.layer.handleZoom();\n    }\n  }\n\n  public resize() {\n    if (this.layer) {\n      this.layer.resize();\n    }\n  }\n\n  public handleMovestart() {\n    if (this.layer) {\n      this.layer.handleMovestart();\n    }\n  }\n\n  public handleMoveend() {\n    if (this.layer) {\n      this.layer.handleMoveend();\n    }\n  }\n\n  public initialize() {\n    if (!this.layer && this.gl) {\n      this.layer = new WindParticles(this.gl, {\n        getZoom: () => this.map.getZoom() as number,\n        triggerRepaint: () => {\n          this.map.triggerRepaint();\n        },\n        getExtent: () => {\n          const bounds = this.map.getBounds().toArray();\n          let xmin = bounds[0][0];\n          const ymin = bounds[0][1];\n          let xmax = bounds[1][0];\n          const ymax = bounds[1][1];\n\n          // 如果是多世界了，固定 x 范围到-180 到 180,但是此时采样会出问题\n          // 比如 -190 - -170范围 -1 世界和 0 世界按全球范围采样会出现错误\n          const worlds = this.getWrappedWorlds();\n          if (worlds.length > 1) {\n            xmin = -180;\n            xmax = 180;\n          } else {\n            if (xmin < -180) {\n              xmin = -180;\n            }\n\n            if (xmax > 180) {\n              xmax = 180;\n            }\n          }\n\n          const p0 = mapboxgl.MercatorCoordinate.fromLngLat(\n            new mapboxgl.LngLat(xmin, ymax),\n          );\n          const p1 = mapboxgl.MercatorCoordinate.fromLngLat(\n            new mapboxgl.LngLat(xmax, ymin),\n          );\n          return [p0.x, p0.y, p1.x, p1.y];\n        },\n        getSize: () => {\n          return [\n            this.map.transform.size.x as number,\n            this.map.transform.size.y as number,\n          ];\n        },\n        interacting: () => {\n          return (\n            !this.map.painter.options.moving &&\n            !this.map.painter.options.rotating &&\n            !this.map.painter.options.zooming\n          );\n        },\n        getWorlds: () => this.getWrappedWorlds(),\n        ...this.options,\n      });\n\n      this.layer.getMercatorCoordinate = getCoords;\n\n      this.map.on('zoom', this.handleZoom);\n      this.map.on('movestart', this.handleMovestart);\n      this.map.on('resize', this.resize);\n      this.map.on('moveend', this.handleMoveend);\n    }\n    if (this.data) {\n      this.setData(this.data);\n    }\n  }\n\n  public onAdd(map: mapboxgl.Map, gl: WebGLRenderingContext) {\n    this.gl = gl;\n    this.map = map;\n\n    if (this.map) {\n      this.initialize();\n    }\n  }\n\n  public setData(data: any) {\n    return new Promise((resolve, reject) => {\n      this.data = data;\n      if (this.data && this.layer) {\n        this.layer.setData(this.data, (status: any) => {\n          if (status) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        });\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  // This is called when the map is destroyed or the gl context lost.\n  public onRemove(map: mapboxgl.Map) {\n    if (this.layer) {\n      this.layer.destroyed();\n      this.layer = null;\n    }\n    map.off('zoom', this.handleZoom);\n    map.off('movestart', this.handleMovestart);\n    map.off('resize', this.resize);\n    map.off('moveend', this.handleMoveend);\n    // @ts-ignore\n    delete this.gl;\n    delete this.map;\n  }\n\n  public getWrappedWorlds() {\n    const result = [0];\n\n    if (this.options.wrapX) {\n      const { width, height } = this.map.transform;\n      const utl = this.map.transform.pointCoordinate(new mapboxgl.Point(0, 0));\n      const utr = this.map.transform.pointCoordinate(\n        new mapboxgl.Point(width, 0),\n      );\n      const ubl = this.map.transform.pointCoordinate(\n        new mapboxgl.Point(width, height),\n      );\n      const ubr = this.map.transform.pointCoordinate(\n        new mapboxgl.Point(0, height),\n      );\n      const w0 = Math.floor(Math.min(utl.x, utr.x, ubl.x, ubr.x));\n      const w1 = Math.floor(Math.max(utl.x, utr.x, ubl.x, ubr.x));\n\n      const extraWorldCopy = 0;\n\n      for (let w = w0 - extraWorldCopy; w <= w1 + extraWorldCopy; w++) {\n        if (w === 0) {\n          continue;\n        }\n        result.push(w);\n      }\n    }\n    return result;\n  }\n\n  public prerender(gl: WebGLRenderingContext, matrix: number[]) {\n    if (this.data && this.layer) {\n      this.layer.prerender(matrix);\n    }\n  }\n\n  public render(gl: WebGLRenderingContext, matrix: number[]) {\n    if (this.data && this.layer) {\n      this.layer.render(matrix);\n    }\n  }\n}\n","import * as mapboxgl from 'mapbox-gl';\n\nimport {\n  WindCore,\n  assign,\n  defaultOptions,\n  Field,\n  formatData,\n  isArray,\n} from 'wind-core';\nimport type { IField, IOptions } from 'wind-core';\n\nimport Overlay from './Overlay';\n\nexport { Field, WindLayer };\n\nexport { default as ScalarFill } from './ScalarFill';\nexport { default as Particles } from './Particles';\n\nexport interface IWindOptions extends IOptions {\n  windOptions: Partial<IOptions>;\n  fieldOptions: any;\n  [key: string]: any;\n}\n\nconst defaultConfig = {\n  doubleBuffer: false,\n  windOptions: defaultOptions,\n};\n\nclass WindLayer extends Overlay {\n  // @ts-ignore\n  public options: IWindOptions;\n  private field: Field | undefined;\n  private wind: WindCore;\n\n  constructor(id: string | number, data: any, options = {} as any) {\n    super(id, { ...defaultConfig, ...options });\n    this.pickWindOptions();\n\n    if (data) {\n      this.setData(data, options.fieldOptions);\n    }\n\n    this.stop = this.stop.bind(this);\n    this.render = this.render.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  public onAdd(map: mapboxgl.Map) {\n    super.onAdd(map);\n\n    if (!this.map) {\n      throw new Error('map is null');\n      return;\n    }\n\n    if (this.canvas !== null) {\n      // this._retina = window.devicePixelRatio >= 2;\n\n      this.render();\n      this.registerEvents();\n    }\n  }\n\n  public handleResize() {\n    if (this.canvas) {\n      this.resizeCanvas(this.canvas);\n    }\n    this.render();\n  }\n\n  public registerEvents() {\n    this.map.on('resize', this.handleResize);\n    this.map.on('movestart', this.stop);\n    this.map.on('moveend', this.render);\n    this.map.on('zoomstart', this.stop);\n    this.map.on('zoomend', this.render);\n    this.map.on('rotatestart', this.stop);\n    this.map.on('rotateend', this.render);\n    this.map.on('pitchstart', this.stop);\n    this.map.on('pitchend', this.render);\n  }\n\n  public unregisterEvents() {\n    this.map.off('resize', this.handleResize);\n    this.map.off('movestart', this.stop);\n    this.map.off('moveend', this.render);\n    this.map.off('zoomstart', this.stop);\n    this.map.off('zoomend', this.render);\n    this.map.off('rotatestart', this.stop);\n    this.map.off('rotateend', this.render);\n    this.map.off('pitchstart', this.stop);\n    this.map.off('pitchend', this.render);\n  }\n\n  public stop() {\n    if (this.wind) {\n      this.wind.clearCanvas();\n    }\n  }\n\n  public render() {\n    if (!this.map) {\n      return;\n    }\n\n    const opt = this.getWindOptions();\n    if (!this.wind && this.map && this.canvas !== null) {\n      const ctx = this.canvas.getContext('2d');\n      if (!ctx) {\n        console.error('create canvas context failed');\n        return;\n      }\n      const data = this.getData();\n\n      // @ts-ignore\n      this.wind = new WindCore(ctx, opt, data);\n\n      // @ts-ignore\n      this.wind.project = this.project.bind(this);\n      // @ts-ignore\n      this.wind.unproject = this.unproject.bind(this);\n      this.wind.intersectsCoordinate = this.intersectsCoordinate.bind(this);\n      this.wind.postrender = () => {\n        // @ts-ignore\n        // this.setCanvasUpdated();\n      };\n    }\n\n    this.wind.prerender();\n    this.wind.render();\n  }\n\n  public remove() {\n    super.remove();\n\n    if (this.wind) {\n      this.wind.stop();\n    }\n\n    this.unregisterEvents();\n  }\n\n  public pickWindOptions() {\n    Object.keys(defaultOptions).forEach((key: string) => {\n      if (this.options && key in this.options) {\n        if (this.options.windOptions === undefined) {\n          this.options.windOptions = {};\n        }\n        // @ts-ignore\n        this.options.windOptions[key] = this.options[key];\n      }\n    });\n  }\n\n  /**\n   * get wind layer data\n   */\n  public getData() {\n    return this.field;\n  }\n\n  /**\n   * set layer data\n   * @param data\n   * @param options\n   * @returns {WindLayer}\n   */\n  public setData(data: any, options: Partial<IField> = {}) {\n    if (data && data.checkFields && data.checkFields()) {\n      this.field = data;\n    } else if (isArray(data)) {\n      this.field = formatData(data, options);\n    } else {\n      console.error('Illegal data');\n    }\n\n    if (this.field) {\n      this?.wind?.updateData(this.field as Field);\n    }\n\n    return this;\n  }\n\n  public setWindOptions(options: Partial<IOptions>) {\n    const beforeOptions = this.options.windOptions || {};\n    this.options = assign(this.options, {\n      windOptions: assign(beforeOptions, options || {}),\n    });\n\n    if (this.wind) {\n      const windOptions = this.options.windOptions;\n      this.wind.setOptions(windOptions);\n      this.wind.prerender();\n    }\n  }\n\n  public getWindOptions() {\n    return this.options.windOptions || {};\n  }\n}\n\nexport default WindLayer;\n"],"names":["isNumber","defaultOptions","mapboxgl","WorkerFactory","uid","getCoords","ScalarCore"],"mappings":"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"}